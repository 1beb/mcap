var searchIndex = JSON.parse('{\
"mcap":{"doc":"A library for manipulating Foxglove MCAP files, both â€¦","t":[3,13,13,13,13,13,13,13,13,13,13,3,4,13,13,13,13,13,17,4,6,3,2,13,3,2,13,13,13,13,13,13,2,2,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,12,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,11,11,11,11,12,0,0,12,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,3,13,3,3,4,3,5,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,3,3,13,3,13,13,3,3,13,3,13,3,13,3,13,13,3,3,13,3,3,13,3,13,4,13,3,3,13,3,13,13,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,0,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,2,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Attachment","BadAttachmentCrc","BadAttachmentLength","BadChunkCrc","BadChunkLength","BadDataCrc","BadFooter","BadIndex","BadMagic","BadSchemaLength","BadSummaryCrc","Channel","Compression","ConflictingChannels","ConflictingSchemas","InvalidSchemaId","Io","Lz4","MAGIC","McapError","McapResult","Message","MessageStream","Parse","Schema","Summary","UnexpectedChunkRecord","UnexpectedEoc","UnexpectedEof","UnknownChannel","UnknownSchema","UnsupportedCompression","WriteOptions","Writer","Zstd","as_any","as_any_mut","as_box_any","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","channel","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","create_time","data","data","data","default","encoding","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","hash","hash","into","into","into","into","into","into","log_time","log_time","media_type","message_encoding","metadata","name","name","ne","ne","ne","ne","publish_time","read","records","schema","sequence","source","to_owned","to_owned","to_owned","to_owned","to_string","topic","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","write","0","0","0","0","0","0","0","0","1","1","available","available","available","calculated","calculated","calculated","calculated","header","header","header","saved","saved","saved","saved","ChunkFlattener","ChunkReader","IgnoreEndMagic","LinearReader","MessageStream","Options","Summary","attachment","attachment_indexes","bitand","bitor","bitxor","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","channels","chunk_indexes","clone","clone_into","default","enum_from_u32","enum_into_u32","eq","eq","eq","fmt","fmt","footer","from","from","from","from","from","from","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","metadata","metadata_indexes","ne","new","new","new","new","new_with_options","new_with_options","new_with_options","next","next","next","next","not","read","read_message_indexes","sans_magic","schemas","seek_message","stats","stream_chunk","sub","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","Attachment","AttachmentHeader","AttachmentIndex","AttachmentIndex","Channel","Channel","Chunk","ChunkHeader","ChunkIndex","ChunkIndex","DataEnd","DataEnd","Footer","Footer","Header","Header","Message","MessageHeader","MessageIndex","MessageIndex","MessageIndexEntry","Metadata","Metadata","MetadataIndex","MetadataIndex","Record","Schema","SchemaHeader","Statistics","Statistics","SummaryOffset","SummaryOffset","Unknown","attachment_count","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","channel_count","channel_id","channel_id","channel_message_counts","chunk_count","chunk_length","chunk_start_offset","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","compressed_size","compressed_size","compression","compression","create_time","create_time","data_section_crc","data_size","default","default","default","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","encoding","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","group_length","group_opcode","group_start","id","id","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","length","length","library","log_time","log_time","log_time","log_time","media_type","media_type","message_count","message_encoding","message_end_time","message_end_time","message_end_time","message_index_length","message_index_offsets","message_start_time","message_start_time","message_start_time","metadata","metadata","metadata_count","name","name","name","name","name","nanos_to_system_time","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","offset","offset","offset","op","opcode","profile","publish_time","read_options","read_options","read_options","read_options","read_options","read_options","read_options","read_options","read_options","read_options","read_options","read_options","read_options","read_options","read_options","read_options","records","schema_count","schema_id","sequence","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","summary_crc","summary_offset_start","summary_start","system_time_to_nanos","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","topic","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uncompressed_crc","uncompressed_size","uncompressed_size","write_options","write_options","write_options","write_options","write_options","write_options","write_options","write_options","write_options","write_options","write_options","write_options","write_options","write_options","write_options","write_options","0","0","0","0","0","0","0","0","0","0","0","data","data","data","data","data","header","header","header","header","opcode","ATTACHMENT","ATTACHMENT_INDEX","CHANNEL","CHUNK","CHUNK_INDEX","DATA_END","FOOTER","HEADER","MESSAGE","MESSAGE_INDEX","METADATA","METADATA_INDEX","SCHEMA","STATISTICS","SUMMARY_OFFSET","Metadata","WriteOptions","Writer","add_channel","attach","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","compression","create","default","drop","finish","flush","fmt","from","from","into","into","new","new","profile","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","write","write_metadata","write_to_known_channel"],"q":["mcap","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","mcap::McapError","","","","","","","","","","","","","","","","","","","","","","","","mcap::read","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","mcap::recordsmcap::records::Record","","","","","","","","","","","","","","","","","","","","","mcap::records::op","","","","","","","","","","","","","","","mcap::write","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["An attachment and its metadata in an MCAP file","","","","","","","","","","","Describes a channel which Messages are published to in an â€¦","Compression options for chunks of channels, schemas, and â€¦","","","","","","Magic bytes for the MCAP format","","","An event in an MCAP file, published to a Channel","","","Describes a schema used by one or more Channels in an MCAP â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Read MCAP files","Raw records parsed from an MCAP file","","","","","","","","","","","","","","","","","","","","","","","","","","","","Write MCAP files","","","","","","","","","","","","","","","","","","","","","","","","","Like <code>LinearReader</code>, but unpacks chunksâ€™ records into its â€¦","Streams records out of a Chunk, decompressing as needed.","Donâ€™t require the MCAP file to end with its magic bytes.","Scans a mapped MCAP file from start to end, returning each â€¦","Reads all messages from the MCAP fileâ€”in the order they â€¦","Nonstandard reading options, e.g., to be more lenient when â€¦","Indexes of an MCAP file parsed from its (optional) summary â€¦","Read the attachment with the given index.","","","","","","","","","","","","","","","","","Maps channel IDs to their channel","","","","","","","","","","","","Read the MCAP footer.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","Read the metadata with the given index.","","","Create a reader for the given file, checking <code>MAGIC</code> bytes â€¦","","","","Create a reader for the given file with special options.","","","","","","","","Read the summary section of the given mapped MCAP file, if â€¦","Read the mesage indexes for the given indexed chunk.","Like <code>new()</code>, but assumes <code>buf</code> has the magic bytes sliced off.","Maps schema IDs to their schema","Seek to the given message in the given indexed chunk.","","Stream messages from the chunk with the given index.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A raw record from an MCAP file.","","","","","","","A record of unknown type","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Opcodes for MCAP file recordsrites an MCAP file to the given writer.","Adds a channel (and its provided schema, if any), â€¦","","","","","","","","","Creates a <code>Writer</code> whch writes to <code>w</code> using the given options","","","Finishes any current chunk and writes out the rest of the â€¦","Finishes the current chunk, if we have one, and flushes â€¦","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Write the given message (and its provided channel, if â€¦","","Write a message to an added channel, given its ID."],"i":[0,10,10,10,10,10,10,10,10,10,10,0,0,10,10,10,10,4,0,0,0,0,0,10,0,0,10,10,10,10,10,10,0,0,4,10,10,10,10,4,5,6,7,9,10,4,5,6,7,9,7,4,5,6,7,4,5,6,7,9,5,7,9,4,5,5,6,7,9,10,10,4,5,6,7,9,10,10,10,4,5,6,7,9,5,6,10,4,5,6,7,9,7,9,9,6,6,5,9,5,6,7,9,7,0,0,6,7,10,4,5,6,7,10,6,10,4,5,6,7,9,10,4,5,6,7,9,10,4,5,6,7,9,0,62,63,64,65,66,67,68,69,66,67,70,71,72,73,74,75,76,70,71,72,73,74,75,76,0,0,22,0,0,0,0,0,25,22,22,22,30,32,33,34,22,25,30,32,33,34,22,25,25,25,22,22,25,22,22,22,22,25,22,25,0,30,32,33,34,22,25,30,32,33,34,22,25,30,32,33,34,0,25,25,30,32,33,34,30,33,34,30,32,33,34,22,25,25,30,25,25,25,25,22,22,30,32,33,34,22,25,30,32,33,34,22,25,30,32,33,34,22,25,50,0,0,50,0,50,50,0,0,50,0,50,0,50,0,50,50,0,0,50,0,0,50,0,50,0,50,0,0,50,0,50,50,47,50,41,27,42,43,44,31,37,45,35,46,20,47,29,28,48,49,50,41,27,42,43,44,31,37,45,35,46,20,47,29,28,48,49,47,44,45,47,47,35,35,41,27,42,43,44,31,37,45,35,46,20,47,29,28,48,49,41,27,42,43,44,31,37,45,35,46,20,47,29,28,48,49,31,35,31,35,46,20,49,20,27,47,49,50,41,27,42,43,44,31,37,45,35,46,20,47,29,28,48,49,42,41,27,42,43,44,31,37,45,35,46,20,47,29,28,48,49,50,41,27,42,43,44,31,37,45,35,46,20,47,29,28,48,49,50,41,27,42,43,44,31,37,45,35,46,20,47,29,28,48,49,48,48,48,42,43,50,41,27,42,43,44,31,37,45,35,46,20,47,29,28,48,49,20,28,41,44,37,46,20,46,20,47,43,31,35,47,35,35,31,35,47,43,29,47,42,46,20,29,28,0,41,27,42,43,44,31,37,45,35,46,20,47,29,28,48,49,37,20,28,0,50,41,44,41,27,42,43,44,31,37,45,35,46,20,47,29,28,48,49,45,47,43,44,50,41,27,42,43,44,31,37,45,35,46,20,47,29,28,48,49,27,27,27,0,41,27,42,43,44,31,37,45,35,46,20,47,29,28,48,49,43,50,41,27,42,43,44,31,37,45,35,46,20,47,29,28,48,49,50,41,27,42,43,44,31,37,45,35,46,20,47,29,28,48,49,50,41,27,42,43,44,31,37,45,35,46,20,47,29,28,48,49,31,31,35,41,27,42,43,44,31,37,45,35,46,20,47,29,28,48,49,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,88,89,90,91,92,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,59,59,59,61,59,61,61,61,61,61,61,59,59,59,61,59,61,59,61,59,61,61,61,59,61,59,61,59,61,59,59,59],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[[3,[2]]],[[3,[1,2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[4,4],[5,5],[6,6],[7,7],[[]],[[]],[[]],[[]],0,0,0,0,[[],4],0,[[5,5],8],[[6,6],8],[[7,7],8],[[9,9],8],[[10,11],12],[[10,11],12],[[4,11],12],[[5,11],12],[[6,11],12],[[7,11],12],[[9,11],12],[13,10],[[]],[14,10],[[]],[[]],[[]],[[]],[[]],[5],[6],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[[5,5],8],[[6,6],8],[[7,7],8],[[9,9],8],0,0,0,0,0,[10,[[16,[15]]]],[[]],[[]],[[]],[[]],[[],17],0,[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[20,[[21,[9]]]],0,[[22,[24,[[23,[22]]]]]],[[22,[24,[[23,[22]]]]]],[[22,[24,[[23,[22]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[22,22],[[]],[[],25],[26,22],[22,26],[[22,22],8],[[22,23],8],[[25,25],8],[[22,11],12],[[25,11],12],[[],[[21,[27]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[28,[[21,[29]]]],0,[[25,25],8],[[],[[21,[30]]]],[31,[[21,[32]]]],[[],[[21,[33]]]],[[],[[21,[34]]]],[[[23,[22]]],[[21,[30]]]],[[[23,[22]]],[[21,[33]]]],[[[23,[22]]],[[21,[34]]]],[30,16],[32,16],[33,16],[34,16],[22],[[],[[21,[[16,[25]]]]]],[[25,35],[[21,[[39,[[36,[6]],[38,[37]]]]]]]],[[],30],0,[[25,35,37],[[21,[7]]]],0,[[25,35],[[21,[40]]]],[[22,[24,[[23,[22]]]]]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[41,41],[27,27],[42,42],[43,43],[44,44],[31,31],[37,37],[45,45],[35,35],[46,46],[20,20],[47,47],[29,29],[28,28],[48,48],[49,49],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[[],27],[[],47],[[],49],[[],[[18,[50]]]],[[],[[18,[41]]]],[[],[[18,[27]]]],[[],[[18,[42]]]],[[],[[18,[43]]]],[[],[[18,[44]]]],[[],[[18,[31]]]],[[],[[18,[37]]]],[[],[[18,[45]]]],[[],[[18,[35]]]],[[],[[18,[46]]]],[[],[[18,[20]]]],[[],[[18,[47]]]],[[],[[18,[29]]]],[[],[[18,[28]]]],[[],[[18,[48]]]],[[],[[18,[49]]]],0,[[41,41],8],[[27,27],8],[[42,42],8],[[43,43],8],[[44,44],8],[[31,31],8],[[37,37],8],[[45,45],8],[[35,35],8],[[46,46],8],[[20,20],8],[[47,47],8],[[29,29],8],[[28,28],8],[[48,48],8],[[49,49],8],[[50,11],12],[[41,11],12],[[27,11],12],[[42,11],12],[[43,11],12],[[44,11],12],[[31,11],12],[[37,11],12],[[45,11],12],[[35,11],12],[[46,11],12],[[20,11],12],[[47,11],12],[[29,11],12],[[28,11],12],[[48,11],12],[[49,11],12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[51,52],[[41,41],8],[[27,27],8],[[42,42],8],[[43,43],8],[[44,44],8],[[31,31],8],[[37,37],8],[[45,45],8],[[35,35],8],[[46,46],8],[[20,20],8],[[47,47],8],[[29,29],8],[[28,28],8],[[48,48],8],[[49,49],8],0,0,0,0,[50,53],0,0,[54,[[55,[41]]]],[54,[[55,[27]]]],[54,[[55,[42]]]],[54,[[55,[43]]]],[54,[[55,[44]]]],[54,[[55,[31]]]],[54,[[55,[37]]]],[54,[[55,[45]]]],[54,[[55,[35]]]],[54,[[55,[46]]]],[54,[[55,[20]]]],[54,[[55,[47]]]],[54,[[55,[29]]]],[54,[[55,[28]]]],[54,[[55,[48]]]],[54,[[55,[49]]]],0,0,0,0,[50,18],[41,18],[27,18],[42,18],[43,18],[44,18],[31,18],[37,18],[45,18],[35,18],[46,18],[20,18],[47,18],[29,18],[28,18],[48,18],[49,18],0,0,0,[52,51],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],0,0,0,[[41,56],55],[[27,56],55],[[42,56],55],[[43,56],55],[[44,56],55],[[31,56],55],[[37,56],55],[[45,56],55],[[35,56],55],[[46,56],55],[[20,56],55],[[47,56],55],[[29,56],55],[[28,56],55],[[48,56],55],[[49,56],55],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[59,[[0,[57,58]]]],6],[[21,[60]]]],[[[59,[[0,[57,58]]]],9],21],[[]],[[]],[[]],[[]],[61,61],[[]],[[61,[16,[4]]],61],[[61,[0,[57,58]]],[[21,[[59,[[0,[57,58]]]]]]]],[[],61],[[[59,[[0,[57,58]]]]]],[[[59,[[0,[57,58]]]]],21],[[[59,[[0,[57,58]]]]],21],[[61,11],12],[[]],[[]],[[]],[[]],[[[0,[57,58]]],[[21,[[59,[[0,[57,58]]]]]]]],[[],61],[[61,[24,[17]]],61],[[]],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[[59,[[0,[57,58]]]],7],21],[[[59,[[0,[57,58]]]],29],21],[[[59,[[0,[57,58]]]],44],21]],"p":[[8,"Any"],[3,"Global"],[3,"Box"],[4,"Compression"],[3,"Schema"],[3,"Channel"],[3,"Message"],[15,"bool"],[3,"Attachment"],[4,"McapError"],[3,"Formatter"],[6,"Result"],[3,"Error"],[4,"Error"],[8,"Error"],[4,"Option"],[3,"String"],[4,"Result"],[3,"TypeId"],[3,"AttachmentIndex"],[6,"McapResult"],[4,"Options"],[3,"EnumSet"],[8,"Into"],[3,"Summary"],[15,"u32"],[3,"Footer"],[3,"MetadataIndex"],[3,"Metadata"],[3,"LinearReader"],[3,"ChunkHeader"],[3,"ChunkReader"],[3,"ChunkFlattener"],[3,"MessageStream"],[3,"ChunkIndex"],[3,"Arc"],[3,"MessageIndexEntry"],[3,"Vec"],[3,"HashMap"],[8,"Iterator"],[3,"Header"],[3,"SchemaHeader"],[3,"Channel"],[3,"MessageHeader"],[3,"MessageIndex"],[3,"AttachmentHeader"],[3,"Statistics"],[3,"SummaryOffset"],[3,"DataEnd"],[4,"Record"],[15,"u64"],[3,"SystemTime"],[15,"u8"],[3,"ReadOptions"],[6,"BinResult"],[3,"WriteOptions"],[8,"Write"],[8,"Seek"],[3,"Writer"],[15,"u16"],[3,"WriteOptions"],[13,"ConflictingChannels"],[13,"ConflictingSchemas"],[13,"Parse"],[13,"Io"],[13,"UnknownChannel"],[13,"UnknownSchema"],[13,"UnexpectedChunkRecord"],[13,"UnsupportedCompression"],[13,"BadAttachmentLength"],[13,"BadChunkLength"],[13,"BadSchemaLength"],[13,"BadAttachmentCrc"],[13,"BadChunkCrc"],[13,"BadDataCrc"],[13,"BadSummaryCrc"],[13,"Header"],[13,"Footer"],[13,"Channel"],[13,"MessageIndex"],[13,"ChunkIndex"],[13,"AttachmentIndex"],[13,"Statistics"],[13,"Metadata"],[13,"MetadataIndex"],[13,"SummaryOffset"],[13,"DataEnd"],[13,"Schema"],[13,"Message"],[13,"Chunk"],[13,"Attachment"],[13,"Unknown"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
