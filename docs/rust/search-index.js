var searchIndex = JSON.parse('{\
"mcap":{"doc":"A library for manipulating Foxglove MCAP files, both â€¦","t":[3,13,13,13,13,13,13,13,13,13,13,3,4,13,13,13,13,13,17,4,6,3,2,13,3,2,13,13,13,13,13,13,2,2,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,12,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,11,11,11,11,12,0,0,12,12,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,3,3,13,3,3,4,3,3,3,5,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,3,3,13,3,13,13,3,3,13,3,13,3,13,3,13,13,3,3,13,3,3,13,3,13,4,13,3,3,13,3,13,13,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,0,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,2,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Attachment","BadAttachmentCrc","BadAttachmentLength","BadChunkCrc","BadChunkLength","BadDataCrc","BadFooter","BadIndex","BadMagic","BadSchemaLength","BadSummaryCrc","Channel","Compression","ConflictingChannels","ConflictingSchemas","InvalidSchemaId","Io","Lz4","MAGIC","McapError","McapResult","Message","MessageStream","Parse","Schema","Summary","UnexpectedChunkRecord","UnexpectedEoc","UnexpectedEof","UnknownChannel","UnknownSchema","UnsupportedCompression","WriteOptions","Writer","Zstd","as_any","as_any_mut","as_box_any","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","channel","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","create_time","data","data","data","default","encoding","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","hash","hash","into","into","into","into","into","into","log_time","log_time","media_type","message_encoding","metadata","name","name","ne","ne","ne","ne","publish_time","read","records","schema","sequence","source","to_owned","to_owned","to_owned","to_owned","to_string","topic","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","write","0","0","0","0","0","0","0","0","1","1","available","available","available","calculated","calculated","calculated","calculated","header","header","header","saved","saved","saved","saved","ChunkFlattener","ChunkReader","IgnoreEndMagic","LinearReader","MessageStream","Options","RawMessage","RawMessageStream","Summary","attachment","attachment_indexes","bitand","bitor","bitxor","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","channels","chunk_indexes","clone","clone_into","default","enum_from_u32","enum_into_u32","eq","eq","eq","fmt","fmt","footer","from","from","from","from","from","from","from","from","get_channel","into","into","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","metadata","metadata_indexes","ne","new","new","new","new","new","new_with_options","new_with_options","new_with_options","new_with_options","next","next","next","next","next","not","read","read_message_indexes","sans_magic","schemas","seek_message","stats","stream_chunk","sub","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","Attachment","AttachmentHeader","AttachmentIndex","AttachmentIndex","Channel","Channel","Chunk","ChunkHeader","ChunkIndex","ChunkIndex","DataEnd","DataEnd","Footer","Footer","Header","Header","Message","MessageHeader","MessageIndex","MessageIndex","MessageIndexEntry","Metadata","Metadata","MetadataIndex","MetadataIndex","Record","Schema","SchemaHeader","Statistics","Statistics","SummaryOffset","SummaryOffset","Unknown","attachment_count","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","channel_count","channel_id","channel_id","channel_message_counts","chunk_count","chunk_length","chunk_start_offset","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","compressed_size","compressed_size","compression","compression","create_time","create_time","data_section_crc","data_size","default","default","default","encoding","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","group_length","group_opcode","group_start","id","id","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","length","length","library","log_time","log_time","log_time","log_time","media_type","media_type","message_count","message_encoding","message_end_time","message_end_time","message_end_time","message_index_length","message_index_offsets","message_start_time","message_start_time","message_start_time","metadata","metadata","metadata_count","name","name","name","name","name","nanos_to_system_time","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","ne","offset","offset","offset","op","opcode","profile","publish_time","read_options","read_options","read_options","read_options","read_options","read_options","read_options","read_options","read_options","read_options","read_options","read_options","read_options","read_options","read_options","read_options","records","schema_count","schema_id","sequence","summary_crc","summary_offset_start","summary_start","system_time_to_nanos","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","topic","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","uncompressed_crc","uncompressed_size","uncompressed_size","write_options","write_options","write_options","write_options","write_options","write_options","write_options","write_options","write_options","write_options","write_options","write_options","write_options","write_options","write_options","write_options","0","0","0","0","0","0","0","0","0","0","0","data","data","data","data","data","header","header","header","header","opcode","ATTACHMENT","ATTACHMENT_INDEX","CHANNEL","CHUNK","CHUNK_INDEX","DATA_END","FOOTER","HEADER","MESSAGE","MESSAGE_INDEX","METADATA","METADATA_INDEX","SCHEMA","STATISTICS","SUMMARY_OFFSET","Metadata","WriteOptions","Writer","add_channel","attach","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","compression","create","default","drop","finish","flush","fmt","from","from","into","into","new","new","profile","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","write","write_metadata","write_to_known_channel"],"q":["mcap","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","mcap::McapError","","","","","","","","","","","","","","","","","","","","","","","","mcap::read","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","mcap::recordsmcap::records::Record","","","","","","","","","","","","","","","","","","","","","mcap::records::op","","","","","","","","","","","","","","","mcap::write","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["An attachment and its metadata in an MCAP file","","","","","","","","","","","Describes a channel which Messages are published to in an â€¦","Compression options for chunks of channels, schemas, and â€¦","","","","","","Magic bytes for the MCAP format","","","An event in an MCAP file, published to a Channel","","","Describes a schema used by one or more Channels in an MCAP â€¦","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Read MCAP files","Raw records parsed from an MCAP file","","","","","","","","","","","","","","","","","","","","","","","","","","","","Write MCAP files","","","","","","","","","","","","","","","","","","","","","","","","","Like <code>LinearReader</code>, but unpacks chunksâ€™ records into its â€¦","Streams records out of a Chunk, decompressing as needed.","Donâ€™t require the MCAP file to end with its magic bytes.","Scans a mapped MCAP file from start to end, returning each â€¦","Like <code>RawMessageStream</code>, but constructs a <code>Message</code> (complete â€¦","Nonstandard reading options, e.g., to be more lenient when â€¦","","Reads all messages from the MCAP fileâ€”in the order they â€¦","Indexes of an MCAP file parsed from its (optional) summary â€¦","Read the attachment with the given index.","","","","","","","","","","","","","","","","","","","","","Maps channel IDs to their channel","","","","","","","","","","","","Read the MCAP footer.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Gets the channel with the given ID (presumably from a â€¦","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Read the metadata with the given index.","","","Create a reader for the given file, checking <code>MAGIC</code> bytes â€¦","","","","","Create a reader for the given file with special options.","","","","","","","","","","Read the summary section of the given mapped MCAP file, if â€¦","Read the mesage indexes for the given indexed chunk.","Like <code>new()</code>, but assumes <code>buf</code> has the magic bytes sliced off.","Maps schema IDs to their schema","Seek to the given message in the given indexed chunk.","","Stream messages from the chunk with the given index.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A raw record from an MCAP file.","","","","","","","A record of unknown type","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Opcodes for MCAP file records.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Writes an MCAP file to the given writer.","Adds a channel (and its provided schema, if any), â€¦","","","","","","","","","Creates a <code>Writer</code> whch writes to <code>w</code> using the given options","","","Finishes any current chunk and writes out the rest of the â€¦","Finishes the current chunk, if we have one, and flushes â€¦","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","Write the given message (and its provided channel, if â€¦","","Write a message to an added channel, given its ID."],"i":[0,10,10,10,10,10,10,10,10,10,10,0,0,10,10,10,10,4,0,0,0,0,0,10,0,0,10,10,10,10,10,10,0,0,4,10,10,10,10,4,5,6,7,9,10,4,5,6,7,9,7,4,5,6,7,4,5,6,7,9,5,7,9,4,5,5,6,7,9,10,10,4,5,6,7,9,10,10,10,4,5,6,7,9,5,6,10,4,5,6,7,9,7,9,9,6,6,5,9,5,6,7,9,7,0,0,6,7,10,4,5,6,7,10,6,10,4,5,6,7,9,10,4,5,6,7,9,10,4,5,6,7,9,0,63,64,65,66,67,68,69,70,67,68,71,72,73,74,75,76,77,71,72,73,74,75,76,77,0,0,22,0,0,0,0,0,0,0,25,22,22,22,33,35,36,28,78,37,22,25,33,35,36,28,78,37,22,25,25,25,22,22,25,22,22,22,22,25,22,25,0,33,35,36,28,78,37,22,25,28,33,35,36,28,78,37,22,25,33,35,36,28,37,0,25,25,33,35,36,28,37,33,36,28,37,33,35,36,28,37,22,25,25,33,25,25,25,25,22,22,33,35,36,28,78,37,22,25,33,35,36,28,78,37,22,25,33,35,36,28,78,37,22,25,52,0,0,52,0,52,52,0,0,52,0,52,0,52,0,52,52,0,0,52,0,0,52,0,52,0,52,0,0,52,0,52,52,49,52,43,27,44,45,46,34,39,47,38,48,20,49,32,31,50,51,52,43,27,44,45,46,34,39,47,38,48,20,49,32,31,50,51,49,46,47,49,49,38,38,43,27,44,45,46,34,39,47,38,48,20,49,32,31,50,51,43,27,44,45,46,34,39,47,38,48,20,49,32,31,50,51,34,38,34,38,48,20,51,20,27,49,51,44,43,27,44,45,46,34,39,47,38,48,20,49,32,31,50,51,52,43,27,44,45,46,34,39,47,38,48,20,49,32,31,50,51,52,43,27,44,45,46,34,39,47,38,48,20,49,32,31,50,51,50,50,50,44,45,52,43,27,44,45,46,34,39,47,38,48,20,49,32,31,50,51,20,31,43,46,39,48,20,48,20,49,45,34,38,49,38,38,34,38,49,45,32,49,44,48,20,32,31,0,43,27,44,45,46,34,39,47,38,48,20,49,32,31,50,51,39,20,31,0,52,43,46,43,27,44,45,46,34,39,47,38,48,20,49,32,31,50,51,47,49,45,46,27,27,27,0,43,27,44,45,46,34,39,47,38,48,20,49,32,31,50,51,45,52,43,27,44,45,46,34,39,47,38,48,20,49,32,31,50,51,52,43,27,44,45,46,34,39,47,38,48,20,49,32,31,50,51,52,43,27,44,45,46,34,39,47,38,48,20,49,32,31,50,51,34,34,38,43,27,44,45,46,34,39,47,38,48,20,49,32,31,50,51,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,90,91,92,93,94,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,61,61,61,62,61,62,62,62,62,62,62,61,61,61,62,61,62,61,62,61,62,62,62,61,62,61,62,61,62,61,61,61],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[[],1],[[[3,[2]]],[[3,[1,2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[4,4],[5,5],[6,6],[7,7],[[]],[[]],[[]],[[]],0,0,0,0,[[],4],0,[[5,5],8],[[6,6],8],[[7,7],8],[[9,9],8],[[10,11],12],[[10,11],12],[[4,11],12],[[5,11],12],[[6,11],12],[[7,11],12],[[9,11],12],[13,10],[[]],[14,10],[[]],[[]],[[]],[[]],[[]],[5],[6],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[[5,5],8],[[6,6],8],[[7,7],8],[[9,9],8],0,0,0,0,0,[10,[[16,[15]]]],[[]],[[]],[[]],[[]],[[],17],0,[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[20,[[21,[9]]]],0,[[22,[24,[[23,[22]]]]]],[[22,[24,[[23,[22]]]]]],[[22,[24,[[23,[22]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[22,22],[[]],[[],25],[26,22],[22,26],[[22,22],8],[[22,23],8],[[25,25],8],[[22,11],12],[[25,11],12],[[],[[21,[27]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[28,29],[[16,[[30,[6]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[31,[[21,[32]]]],0,[[25,25],8],[[],[[21,[33]]]],[34,[[21,[35]]]],[[],[[21,[36]]]],[[],[[21,[28]]]],[[],[[21,[37]]]],[[[23,[22]]],[[21,[33]]]],[[[23,[22]]],[[21,[36]]]],[[[23,[22]]],[[21,[28]]]],[[[23,[22]]],[[21,[37]]]],[33,16],[35,16],[36,16],[28,16],[37,16],[22],[[],[[21,[[16,[25]]]]]],[[25,38],[[21,[[41,[[30,[6]],[40,[39]]]]]]]],[[],33],0,[[25,38,39],[[21,[7]]]],0,[[25,38],[[21,[42]]]],[[22,[24,[[23,[22]]]]]],[[]],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,[43,43],[27,27],[44,44],[45,45],[46,46],[34,34],[39,39],[47,47],[38,38],[48,48],[20,20],[49,49],[32,32],[31,31],[50,50],[51,51],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[[],27],[[],49],[[],51],0,[[43,43],8],[[27,27],8],[[44,44],8],[[45,45],8],[[46,46],8],[[34,34],8],[[39,39],8],[[47,47],8],[[38,38],8],[[48,48],8],[[20,20],8],[[49,49],8],[[32,32],8],[[31,31],8],[[50,50],8],[[51,51],8],[[52,11],12],[[43,11],12],[[27,11],12],[[44,11],12],[[45,11],12],[[46,11],12],[[34,11],12],[[39,11],12],[[47,11],12],[[38,11],12],[[48,11],12],[[20,11],12],[[49,11],12],[[32,11],12],[[31,11],12],[[50,11],12],[[51,11],12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[53,54],[[43,43],8],[[27,27],8],[[44,44],8],[[45,45],8],[[46,46],8],[[34,34],8],[[39,39],8],[[47,47],8],[[38,38],8],[[48,48],8],[[20,20],8],[[49,49],8],[[32,32],8],[[31,31],8],[[50,50],8],[[51,51],8],0,0,0,0,[52,55],0,0,[56,[[57,[43]]]],[56,[[57,[27]]]],[56,[[57,[44]]]],[56,[[57,[45]]]],[56,[[57,[46]]]],[56,[[57,[34]]]],[56,[[57,[39]]]],[56,[[57,[47]]]],[56,[[57,[38]]]],[56,[[57,[48]]]],[56,[[57,[20]]]],[56,[[57,[49]]]],[56,[[57,[32]]]],[56,[[57,[31]]]],[56,[[57,[50]]]],[56,[[57,[51]]]],0,0,0,0,0,0,0,[54,53],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],0,0,0,[[43,58],57],[[27,58],57],[[44,58],57],[[45,58],57],[[46,58],57],[[34,58],57],[[39,58],57],[[47,58],57],[[38,58],57],[[48,58],57],[[20,58],57],[[49,58],57],[[32,58],57],[[31,58],57],[[50,58],57],[[51,58],57],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[61,[[0,[59,60]]]],6],[[21,[29]]]],[[[61,[[0,[59,60]]]],9],21],[[]],[[]],[[]],[[]],[62,62],[[]],[[62,[16,[4]]],62],[[62,[0,[59,60]]],[[21,[[61,[[0,[59,60]]]]]]]],[[],62],[[[61,[[0,[59,60]]]]]],[[[61,[[0,[59,60]]]]],21],[[[61,[[0,[59,60]]]]],21],[[62,11],12],[[]],[[]],[[]],[[]],[[[0,[59,60]]],[[21,[[61,[[0,[59,60]]]]]]]],[[],62],[[62,[24,[17]]],62],[[]],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[[61,[[0,[59,60]]]],7],21],[[[61,[[0,[59,60]]]],32],21],[[[61,[[0,[59,60]]]],46],21]],"p":[[8,"Any"],[3,"Global"],[3,"Box"],[4,"Compression"],[3,"Schema"],[3,"Channel"],[3,"Message"],[15,"bool"],[3,"Attachment"],[4,"McapError"],[3,"Formatter"],[6,"Result"],[3,"Error"],[4,"Error"],[8,"Error"],[4,"Option"],[3,"String"],[4,"Result"],[3,"TypeId"],[3,"AttachmentIndex"],[6,"McapResult"],[4,"Options"],[3,"EnumSet"],[8,"Into"],[3,"Summary"],[15,"u32"],[3,"Footer"],[3,"RawMessageStream"],[15,"u16"],[3,"Arc"],[3,"MetadataIndex"],[3,"Metadata"],[3,"LinearReader"],[3,"ChunkHeader"],[3,"ChunkReader"],[3,"ChunkFlattener"],[3,"MessageStream"],[3,"ChunkIndex"],[3,"MessageIndexEntry"],[3,"Vec"],[3,"HashMap"],[8,"Iterator"],[3,"Header"],[3,"SchemaHeader"],[3,"Channel"],[3,"MessageHeader"],[3,"MessageIndex"],[3,"AttachmentHeader"],[3,"Statistics"],[3,"SummaryOffset"],[3,"DataEnd"],[4,"Record"],[15,"u64"],[3,"SystemTime"],[15,"u8"],[3,"ReadOptions"],[6,"BinResult"],[3,"WriteOptions"],[8,"Write"],[8,"Seek"],[3,"Writer"],[3,"WriteOptions"],[13,"ConflictingChannels"],[13,"ConflictingSchemas"],[13,"Parse"],[13,"Io"],[13,"UnknownChannel"],[13,"UnknownSchema"],[13,"UnexpectedChunkRecord"],[13,"UnsupportedCompression"],[13,"BadAttachmentLength"],[13,"BadChunkLength"],[13,"BadSchemaLength"],[13,"BadAttachmentCrc"],[13,"BadChunkCrc"],[13,"BadDataCrc"],[13,"BadSummaryCrc"],[3,"RawMessage"],[13,"Header"],[13,"Footer"],[13,"Channel"],[13,"MessageIndex"],[13,"ChunkIndex"],[13,"AttachmentIndex"],[13,"Statistics"],[13,"Metadata"],[13,"MetadataIndex"],[13,"SummaryOffset"],[13,"DataEnd"],[13,"Schema"],[13,"Message"],[13,"Chunk"],[13,"Attachment"],[13,"Unknown"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
