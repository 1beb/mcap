{"sections":[],"primaryContentSections":[{"content":[{"text":"Overview","type":"heading","level":2,"anchor":"Overview"},{"inlineContent":[{"isActive":true,"identifier":"https:\/\/mcap.dev\/","type":"reference"},{"text":" is a modular container file format for heterogeneous timestamped data. It is ideal for robotics applications, as it can record multiple streams of structured and unstructured data (e.g. ROS, Protobuf, JSON Schema, etc.) in a single file.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"MCAP works well under various workloads, resource constraints, and durability requirements.","type":"text"}],"type":"paragraph"},{"text":"Heterogeneous data","type":"heading","level":3,"anchor":"Heterogeneous-data"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Store messages encoded in multiple serialization formats in a single file"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Include metadata and attachments"}]}]}]},{"text":"Performant writing","type":"heading","level":3,"anchor":"Performant-writing"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Append-only structure"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Recover partially-written files when data recording is interrupted","type":"text"}]}]}]},{"text":"Efficient seeking","type":"heading","level":3,"anchor":"Efficient-seeking"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Extract data without scanning the entire file","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Fast access to indexed summary data","type":"text"}]}]}]},{"text":"Self-contained files","type":"heading","level":3,"anchor":"Self-contained-files"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Embed all message schemas in the file","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"No extra dependencies needed for decoding","type":"text"}]}]}]},{"text":"Adding MCAP as a dependency","type":"heading","level":2,"anchor":"Adding-MCAP-as-a-dependency"},{"inlineContent":[{"type":"text","text":"In "},{"type":"codeVoice","code":"Package.swift"},{"type":"text","text":", add a dependency on this repo, and include the "},{"type":"codeVoice","code":"\"MCAP\""},{"type":"text","text":" library as a dependency for your target:"}],"type":"paragraph"},{"code":["Package(","  dependencies: [","    .package(url: \"https:\/\/github.com\/foxglove\/mcap\", from: \"0.1.0\"),","  ],","  targets: [","    .target(name: \"<target>\", dependencies: [","      .product(name: \"MCAP\", package: \"mcap\"),","    ]),","  ]",")"],"type":"codeListing","syntax":"swift"},{"inlineContent":[{"text":"Import the library using ","type":"text"},{"code":"import MCAP","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}],"kind":"content"}],"schemaVersion":{"patch":0,"minor":2,"major":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/MCAP\/documentation\/MCAP"},"kind":"symbol","topicSections":[{"identifiers":["doc:\/\/MCAP\/documentation\/MCAP\/MCAPRandomAccessReader","doc:\/\/MCAP\/documentation\/MCAP\/MCAPStreamedReader","doc:\/\/MCAP\/documentation\/MCAP\/MCAPWriter"],"title":"Classes"},{"identifiers":["doc:\/\/MCAP\/documentation\/MCAP\/IRandomAccessReadable","doc:\/\/MCAP\/documentation\/MCAP\/IWritable","doc:\/\/MCAP\/documentation\/MCAP\/Record"],"title":"Protocols"},{"identifiers":["doc:\/\/MCAP\/documentation\/MCAP\/Attachment","doc:\/\/MCAP\/documentation\/MCAP\/AttachmentIndex","doc:\/\/MCAP\/documentation\/MCAP\/Channel","doc:\/\/MCAP\/documentation\/MCAP\/Chunk","doc:\/\/MCAP\/documentation\/MCAP\/ChunkIndex","doc:\/\/MCAP\/documentation\/MCAP\/DataEnd","doc:\/\/MCAP\/documentation\/MCAP\/Footer","doc:\/\/MCAP\/documentation\/MCAP\/Header","doc:\/\/MCAP\/documentation\/MCAP\/Message","doc:\/\/MCAP\/documentation\/MCAP\/MessageIndex","doc:\/\/MCAP\/documentation\/MCAP\/Metadata","doc:\/\/MCAP\/documentation\/MCAP\/MetadataIndex","doc:\/\/MCAP\/documentation\/MCAP\/Schema","doc:\/\/MCAP\/documentation\/MCAP\/Statistics","doc:\/\/MCAP\/documentation\/MCAP\/SummaryOffset"],"title":"Structures"},{"identifiers":["doc:\/\/MCAP\/documentation\/MCAP\/mcapMagic"],"title":"Variables"},{"identifiers":["doc:\/\/MCAP\/documentation\/MCAP\/ChannelID","doc:\/\/MCAP\/documentation\/MCAP\/DecompressHandlers","doc:\/\/MCAP\/documentation\/MCAP\/SchemaID","doc:\/\/MCAP\/documentation\/MCAP\/Timestamp"],"title":"Type Aliases"},{"identifiers":["doc:\/\/MCAP\/documentation\/MCAP\/MCAPReadError","doc:\/\/MCAP\/documentation\/MCAP\/Opcode"],"title":"Enumerations"}],"abstract":[{"text":"Read and write log files containing heterogeneous timestamped data.","type":"text"}],"metadata":{"role":"collection","externalID":"MCAP","title":"MCAP","symbolKind":"module","roleHeading":"Framework","modules":[{"name":"MCAP"}]},"hierarchy":{"paths":[[]]},"variants":[{"paths":["\/documentation\/mcap"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://MCAP/documentation/MCAP/AttachmentIndex":{"role":"symbol","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/AttachmentIndex","navigatorTitle":[{"kind":"identifier","text":"AttachmentIndex"}],"kind":"symbol","url":"\/documentation\/mcap\/attachmentindex","title":"AttachmentIndex","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AttachmentIndex"}],"abstract":[],"type":"topic"},"doc://MCAP/documentation/MCAP/MCAPStreamedReader":{"title":"MCAPStreamedReader","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MCAPStreamedReader","kind":"identifier"}],"identifier":"doc:\/\/MCAP\/documentation\/MCAP\/MCAPStreamedReader","kind":"symbol","url":"\/documentation\/mcap\/mcapstreamedreader","role":"symbol","abstract":[{"type":"text","text":"A reader that parses MCAP data from a stream. Rather than expecting the entire MCAP file to be"},{"type":"text","text":" "},{"type":"text","text":"available up front, this reader emits records as they are encountered. This means it does not use"},{"type":"text","text":" "},{"type":"text","text":"the summary or index data to read the file, and can be used when only some of the data is available"},{"type":"text","text":" "},{"type":"text","text":"(such as when streaming over the network)."}],"navigatorTitle":[{"text":"MCAPStreamedReader","kind":"identifier"}]},"doc://MCAP/documentation/MCAP/Record":{"title":"Record","url":"\/documentation\/mcap\/record","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/Record","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Record"}],"kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Record"}],"abstract":[],"role":"symbol"},"doc://MCAP/documentation/MCAP/MCAPRandomAccessReader":{"url":"\/documentation\/mcap\/mcaprandomaccessreader","abstract":[{"text":"A reader that parses MCAP data from a random-access data source. This reader uses the summary and","type":"text"},{"type":"text","text":" "},{"type":"text","text":"index data to seek in the file and read messages in log-time order, and requires the entire file to"},{"type":"text","text":" "},{"type":"text","text":"be accessible via byte ranges."}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"MCAPRandomAccessReader"}],"role":"symbol","type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"MCAPRandomAccessReader"}],"title":"MCAPRandomAccessReader","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/MCAPRandomAccessReader"},"doc://MCAP/documentation/MCAP/DecompressHandlers":{"identifier":"doc:\/\/MCAP\/documentation\/MCAP\/DecompressHandlers","url":"\/documentation\/mcap\/decompresshandlers","abstract":[],"role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DecompressHandlers"}],"kind":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DecompressHandlers"}],"title":"DecompressHandlers"},"doc://MCAP/documentation/MCAP/Timestamp":{"url":"\/documentation\/mcap\/timestamp","abstract":[],"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Timestamp","kind":"identifier"}],"role":"symbol","type":"topic","kind":"symbol","navigatorTitle":[{"text":"Timestamp","kind":"identifier"}],"title":"Timestamp","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/Timestamp"},"doc://MCAP/documentation/MCAP/Statistics":{"role":"symbol","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/Statistics","navigatorTitle":[{"kind":"identifier","text":"Statistics"}],"kind":"symbol","url":"\/documentation\/mcap\/statistics","title":"Statistics","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Statistics"}],"abstract":[],"type":"topic"},"doc://MCAP/documentation/MCAP/Attachment":{"role":"symbol","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/Attachment","navigatorTitle":[{"kind":"identifier","text":"Attachment"}],"kind":"symbol","url":"\/documentation\/mcap\/attachment","title":"Attachment","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Attachment"}],"abstract":[],"type":"topic"},"doc://MCAP/documentation/MCAP/Schema":{"role":"symbol","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/Schema","navigatorTitle":[{"kind":"identifier","text":"Schema"}],"kind":"symbol","url":"\/documentation\/mcap\/schema","title":"Schema","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Schema"}],"abstract":[],"type":"topic"},"doc://MCAP/documentation/MCAP/Channel":{"title":"Channel","url":"\/documentation\/mcap\/channel","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/Channel","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Channel"}],"kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Channel"}],"abstract":[],"role":"symbol"},"https://mcap.dev/":{"url":"https:\/\/mcap.dev\/","titleInlineContent":[{"text":"MCAP","type":"text"}],"identifier":"https:\/\/mcap.dev\/","title":"MCAP","type":"link"},"doc://MCAP/documentation/MCAP/ChannelID":{"url":"\/documentation\/mcap\/channelid","abstract":[],"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ChannelID","kind":"identifier"}],"role":"symbol","type":"topic","kind":"symbol","navigatorTitle":[{"text":"ChannelID","kind":"identifier"}],"title":"ChannelID","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/ChannelID"},"doc://MCAP/documentation/MCAP/SummaryOffset":{"role":"symbol","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/SummaryOffset","navigatorTitle":[{"kind":"identifier","text":"SummaryOffset"}],"kind":"symbol","url":"\/documentation\/mcap\/summaryoffset","title":"SummaryOffset","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"SummaryOffset"}],"abstract":[],"type":"topic"},"doc://MCAP/documentation/MCAP/Metadata":{"role":"symbol","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/Metadata","navigatorTitle":[{"kind":"identifier","text":"Metadata"}],"kind":"symbol","url":"\/documentation\/mcap\/metadata","title":"Metadata","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Metadata"}],"abstract":[],"type":"topic"},"doc://MCAP/documentation/MCAP/Chunk":{"role":"symbol","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/Chunk","navigatorTitle":[{"kind":"identifier","text":"Chunk"}],"kind":"symbol","url":"\/documentation\/mcap\/chunk","title":"Chunk","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Chunk"}],"abstract":[],"type":"topic"},"doc://MCAP/documentation/MCAP/MCAPWriter":{"url":"\/documentation\/mcap\/mcapwriter","abstract":[{"text":"A writer that produces MCAP files, with options to enable compression for smaller files and indexes","type":"text"},{"type":"text","text":" "},{"type":"text","text":"for more efficient reading."}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"MCAPWriter"}],"role":"symbol","type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"MCAPWriter"}],"title":"MCAPWriter","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/MCAPWriter"},"doc://MCAP/documentation/MCAP/Message":{"role":"symbol","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/Message","navigatorTitle":[{"kind":"identifier","text":"Message"}],"kind":"symbol","url":"\/documentation\/mcap\/message","title":"Message","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Message"}],"abstract":[],"type":"topic"},"doc://MCAP/documentation/MCAP/IWritable":{"role":"symbol","navigatorTitle":[{"text":"IWritable","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/IWritable","abstract":[],"kind":"symbol","url":"\/documentation\/mcap\/iwritable","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"IWritable","kind":"identifier"}],"title":"IWritable"},"doc://MCAP/documentation/MCAP/ChunkIndex":{"role":"symbol","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/ChunkIndex","navigatorTitle":[{"kind":"identifier","text":"ChunkIndex"}],"kind":"symbol","url":"\/documentation\/mcap\/chunkindex","title":"ChunkIndex","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChunkIndex"}],"abstract":[],"type":"topic"},"doc://MCAP/documentation/MCAP/Header":{"title":"Header","url":"\/documentation\/mcap\/header","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/Header","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Header"}],"kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Header"}],"abstract":[],"role":"symbol"},"doc://MCAP/documentation/MCAP/MCAPReadError":{"title":"MCAPReadError","kind":"symbol","type":"topic","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/MCAPReadError","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"MCAPReadError","kind":"identifier"}],"url":"\/documentation\/mcap\/mcapreaderror","abstract":[],"role":"symbol","navigatorTitle":[{"text":"MCAPReadError","kind":"identifier"}]},"doc://MCAP/documentation/MCAP/DataEnd":{"title":"DataEnd","url":"\/documentation\/mcap\/dataend","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/DataEnd","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DataEnd"}],"kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DataEnd"}],"abstract":[],"role":"symbol"},"doc://MCAP/documentation/MCAP/mcapMagic":{"url":"\/documentation\/mcap\/mcapmagic","abstract":[{"text":"Magic bytes that appear at the beginning and end of every valid MCAP file: ","type":"text"},{"code":"\"\\u{89}MCAP0\\r\\n\"","type":"codeVoice"},{"text":".","type":"text"}],"fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"mcapMagic"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Data","preciseIdentifier":"s:10Foundation4DataV"}],"role":"symbol","type":"topic","kind":"symbol","title":"mcapMagic","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/mcapMagic"},"doc://MCAP/documentation/MCAP/MetadataIndex":{"role":"symbol","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/MetadataIndex","navigatorTitle":[{"kind":"identifier","text":"MetadataIndex"}],"kind":"symbol","url":"\/documentation\/mcap\/metadataindex","title":"MetadataIndex","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"MetadataIndex"}],"abstract":[],"type":"topic"},"doc://MCAP/documentation/MCAP":{"title":"MCAP","url":"\/documentation\/mcap","identifier":"doc:\/\/MCAP\/documentation\/MCAP","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Read and write log files containing heterogeneous timestamped data."}],"role":"collection"},"doc://MCAP/documentation/MCAP/SchemaID":{"type":"topic","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/SchemaID","role":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"SchemaID"}],"navigatorTitle":[{"kind":"identifier","text":"SchemaID"}],"title":"SchemaID","url":"\/documentation\/mcap\/schemaid","kind":"symbol","abstract":[]},"doc://MCAP/documentation/MCAP/Footer":{"role":"symbol","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/Footer","navigatorTitle":[{"kind":"identifier","text":"Footer"}],"kind":"symbol","url":"\/documentation\/mcap\/footer","title":"Footer","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Footer"}],"abstract":[],"type":"topic"},"doc://MCAP/documentation/MCAP/Opcode":{"url":"\/documentation\/mcap\/opcode","abstract":[],"fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Opcode"}],"role":"symbol","type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Opcode"}],"title":"Opcode","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/Opcode"},"doc://MCAP/documentation/MCAP/MessageIndex":{"role":"symbol","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/MessageIndex","navigatorTitle":[{"kind":"identifier","text":"MessageIndex"}],"kind":"symbol","url":"\/documentation\/mcap\/messageindex","title":"MessageIndex","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"MessageIndex"}],"abstract":[],"type":"topic"},"doc://MCAP/documentation/MCAP/IRandomAccessReadable":{"url":"\/documentation\/mcap\/irandomaccessreadable","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/IRandomAccessReadable","kind":"symbol","abstract":[],"title":"IRandomAccessReadable","role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"IRandomAccessReadable"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"IRandomAccessReadable"}]}}}