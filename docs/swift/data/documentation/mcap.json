{"schemaVersion":{"patch":0,"major":0,"minor":2},"topicSections":[{"identifiers":["doc:\/\/MCAP\/documentation\/MCAP\/MCAPRandomAccessReader","doc:\/\/MCAP\/documentation\/MCAP\/MCAPStreamedReader","doc:\/\/MCAP\/documentation\/MCAP\/MCAPWriter"],"title":"Classes"},{"identifiers":["doc:\/\/MCAP\/documentation\/MCAP\/IRandomAccessReadable","doc:\/\/MCAP\/documentation\/MCAP\/IWritable","doc:\/\/MCAP\/documentation\/MCAP\/Record"],"title":"Protocols"},{"identifiers":["doc:\/\/MCAP\/documentation\/MCAP\/Attachment","doc:\/\/MCAP\/documentation\/MCAP\/AttachmentIndex","doc:\/\/MCAP\/documentation\/MCAP\/Channel","doc:\/\/MCAP\/documentation\/MCAP\/Chunk","doc:\/\/MCAP\/documentation\/MCAP\/ChunkIndex","doc:\/\/MCAP\/documentation\/MCAP\/DataEnd","doc:\/\/MCAP\/documentation\/MCAP\/Footer","doc:\/\/MCAP\/documentation\/MCAP\/Header","doc:\/\/MCAP\/documentation\/MCAP\/Message","doc:\/\/MCAP\/documentation\/MCAP\/MessageIndex","doc:\/\/MCAP\/documentation\/MCAP\/Metadata","doc:\/\/MCAP\/documentation\/MCAP\/MetadataIndex","doc:\/\/MCAP\/documentation\/MCAP\/Schema","doc:\/\/MCAP\/documentation\/MCAP\/Statistics","doc:\/\/MCAP\/documentation\/MCAP\/SummaryOffset"],"title":"Structures"},{"identifiers":["doc:\/\/MCAP\/documentation\/MCAP\/mcapMagic"],"title":"Variables"},{"identifiers":["doc:\/\/MCAP\/documentation\/MCAP\/ChannelID","doc:\/\/MCAP\/documentation\/MCAP\/DecompressHandlers","doc:\/\/MCAP\/documentation\/MCAP\/SchemaID","doc:\/\/MCAP\/documentation\/MCAP\/Timestamp"],"title":"Type Aliases"},{"identifiers":["doc:\/\/MCAP\/documentation\/MCAP\/MCAPReadError","doc:\/\/MCAP\/documentation\/MCAP\/Opcode"],"title":"Enumerations"}],"variants":[{"paths":["\/documentation\/mcap"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","hierarchy":{"paths":[[]]},"primaryContentSections":[{"content":[{"type":"heading","anchor":"Overview","text":"Overview","level":2},{"inlineContent":[{"type":"reference","isActive":true,"identifier":"https:\/\/mcap.dev\/"},{"type":"text","text":" is a modular container file format for heterogeneous timestamped data. It is ideal for robotics applications, as it can record multiple streams of structured and unstructured data (e.g. ROS, Protobuf, JSON Schema, etc.) in a single file."}],"type":"paragraph"},{"inlineContent":[{"text":"MCAP works well under various workloads, resource constraints, and durability requirements.","type":"text"}],"type":"paragraph"},{"type":"heading","anchor":"Heterogeneous-data","text":"Heterogeneous data","level":3},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Store messages encoded in multiple serialization formats in a single file"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Include metadata and attachments","type":"text"}]}]}]},{"type":"heading","anchor":"Performant-writing","text":"Performant writing","level":3},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Append-only structure"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Recover partially-written files when data recording is interrupted","type":"text"}]}]}]},{"type":"heading","anchor":"Efficient-seeking","text":"Efficient seeking","level":3},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Extract data without scanning the entire file","type":"text"}]}]},{"content":[{"inlineContent":[{"text":"Fast access to indexed summary data","type":"text"}],"type":"paragraph"}]}]},{"type":"heading","anchor":"Self-contained-files","text":"Self-contained files","level":3},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Embed all message schemas in the file","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"No extra dependencies needed for decoding"}]}]}]},{"type":"heading","anchor":"Adding-MCAP-as-a-dependency","text":"Adding MCAP as a dependency","level":2},{"inlineContent":[{"text":"In ","type":"text"},{"code":"Package.swift","type":"codeVoice"},{"text":", add a dependency on this repo, and include the ","type":"text"},{"code":"\"MCAP\"","type":"codeVoice"},{"text":" library as a dependency for your target:","type":"text"}],"type":"paragraph"},{"type":"codeListing","code":["Package(","  dependencies: [","    .package(url: \"https:\/\/github.com\/foxglove\/mcap\", from: \"0.1.0\"),","  ],","  targets: [","    .target(name: \"<target>\", dependencies: [","      .product(name: \"MCAP\", package: \"mcap\"),","    ]),","  ]",")"],"syntax":"swift"},{"inlineContent":[{"type":"text","text":"Import the library using "},{"code":"import MCAP","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}],"kind":"content"}],"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/MCAP\/documentation\/MCAP"},"abstract":[{"type":"text","text":"Read and write log files containing heterogeneous timestamped data."}],"metadata":{"externalID":"MCAP","roleHeading":"Framework","title":"MCAP","role":"collection","modules":[{"name":"MCAP"}],"symbolKind":"module"},"references":{"doc://MCAP/documentation/MCAP/IRandomAccessReadable":{"title":"IRandomAccessReadable","navigatorTitle":[{"kind":"identifier","text":"IRandomAccessReadable"}],"identifier":"doc:\/\/MCAP\/documentation\/MCAP\/IRandomAccessReadable","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"IRandomAccessReadable"}],"url":"\/documentation\/mcap\/irandomaccessreadable","abstract":[],"kind":"symbol"},"doc://MCAP/documentation/MCAP/MCAPWriter":{"type":"topic","title":"MCAPWriter","url":"\/documentation\/mcap\/mcapwriter","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MCAPWriter","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/MCAPWriter","navigatorTitle":[{"text":"MCAPWriter","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"A writer that produces MCAP files, with options to enable compression for smaller files and indexes","type":"text"},{"text":" ","type":"text"},{"text":"for more efficient reading.","type":"text"}]},"doc://MCAP/documentation/MCAP/MCAPRandomAccessReader":{"kind":"symbol","url":"\/documentation\/mcap\/mcaprandomaccessreader","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"MCAPRandomAccessReader"}],"abstract":[{"type":"text","text":"A reader that parses MCAP data from a random-access data source. This reader uses the summary and"},{"type":"text","text":" "},{"type":"text","text":"index data to seek in the file and read messages in log-time order, and requires the entire file to"},{"type":"text","text":" "},{"type":"text","text":"be accessible via byte ranges."}],"identifier":"doc:\/\/MCAP\/documentation\/MCAP\/MCAPRandomAccessReader","navigatorTitle":[{"kind":"identifier","text":"MCAPRandomAccessReader"}],"title":"MCAPRandomAccessReader","role":"symbol","type":"topic"},"doc://MCAP/documentation/MCAP":{"kind":"symbol","role":"collection","url":"\/documentation\/mcap","abstract":[{"type":"text","text":"Read and write log files containing heterogeneous timestamped data."}],"type":"topic","identifier":"doc:\/\/MCAP\/documentation\/MCAP","title":"MCAP"},"doc://MCAP/documentation/MCAP/Schema":{"kind":"symbol","url":"\/documentation\/mcap\/schema","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Schema"}],"abstract":[],"identifier":"doc:\/\/MCAP\/documentation\/MCAP\/Schema","navigatorTitle":[{"kind":"identifier","text":"Schema"}],"title":"Schema","role":"symbol","type":"topic"},"doc://MCAP/documentation/MCAP/Record":{"kind":"symbol","url":"\/documentation\/mcap\/record","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Record"}],"abstract":[],"identifier":"doc:\/\/MCAP\/documentation\/MCAP\/Record","navigatorTitle":[{"kind":"identifier","text":"Record"}],"title":"Record","role":"symbol","type":"topic"},"doc://MCAP/documentation/MCAP/MetadataIndex":{"title":"MetadataIndex","navigatorTitle":[{"kind":"identifier","text":"MetadataIndex"}],"identifier":"doc:\/\/MCAP\/documentation\/MCAP\/MetadataIndex","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"MetadataIndex"}],"url":"\/documentation\/mcap\/metadataindex","abstract":[],"kind":"symbol"},"doc://MCAP/documentation/MCAP/ChannelID":{"title":"ChannelID","navigatorTitle":[{"kind":"identifier","text":"ChannelID"}],"identifier":"doc:\/\/MCAP\/documentation\/MCAP\/ChannelID","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelID"}],"url":"\/documentation\/mcap\/channelid","abstract":[],"kind":"symbol"},"doc://MCAP/documentation/MCAP/AttachmentIndex":{"type":"topic","title":"AttachmentIndex","url":"\/documentation\/mcap\/attachmentindex","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AttachmentIndex","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/AttachmentIndex","navigatorTitle":[{"text":"AttachmentIndex","kind":"identifier"}],"kind":"symbol","abstract":[]},"doc://MCAP/documentation/MCAP/Message":{"title":"Message","role":"symbol","navigatorTitle":[{"text":"Message","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Message","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/Message","abstract":[],"url":"\/documentation\/mcap\/message","kind":"symbol"},"doc://MCAP/documentation/MCAP/Attachment":{"title":"Attachment","navigatorTitle":[{"kind":"identifier","text":"Attachment"}],"identifier":"doc:\/\/MCAP\/documentation\/MCAP\/Attachment","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Attachment"}],"url":"\/documentation\/mcap\/attachment","abstract":[],"kind":"symbol"},"doc://MCAP/documentation/MCAP/DecompressHandlers":{"kind":"symbol","title":"DecompressHandlers","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DecompressHandlers"}],"url":"\/documentation\/mcap\/decompresshandlers","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/DecompressHandlers","abstract":[],"role":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"DecompressHandlers"}]},"https://mcap.dev/":{"type":"link","titleInlineContent":[{"type":"text","text":"MCAP"}],"url":"https:\/\/mcap.dev\/","identifier":"https:\/\/mcap.dev\/","title":"MCAP"},"doc://MCAP/documentation/MCAP/SchemaID":{"kind":"symbol","role":"symbol","url":"\/documentation\/mcap\/schemaid","abstract":[],"type":"topic","navigatorTitle":[{"text":"SchemaID","kind":"identifier"}],"identifier":"doc:\/\/MCAP\/documentation\/MCAP\/SchemaID","title":"SchemaID","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SchemaID","kind":"identifier"}]},"doc://MCAP/documentation/MCAP/Chunk":{"type":"topic","url":"\/documentation\/mcap\/chunk","abstract":[],"kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Chunk"}],"title":"Chunk","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Chunk"}],"identifier":"doc:\/\/MCAP\/documentation\/MCAP\/Chunk"},"doc://MCAP/documentation/MCAP/ChunkIndex":{"kind":"symbol","url":"\/documentation\/mcap\/chunkindex","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChunkIndex"}],"abstract":[],"identifier":"doc:\/\/MCAP\/documentation\/MCAP\/ChunkIndex","navigatorTitle":[{"kind":"identifier","text":"ChunkIndex"}],"title":"ChunkIndex","role":"symbol","type":"topic"},"doc://MCAP/documentation/MCAP/Header":{"identifier":"doc:\/\/MCAP\/documentation\/MCAP\/Header","navigatorTitle":[{"text":"Header","kind":"identifier"}],"abstract":[],"title":"Header","url":"\/documentation\/mcap\/header","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Header","kind":"identifier"}],"kind":"symbol","type":"topic","role":"symbol"},"doc://MCAP/documentation/MCAP/Timestamp":{"type":"topic","title":"Timestamp","navigatorTitle":[{"kind":"identifier","text":"Timestamp"}],"abstract":[],"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"Timestamp"}],"identifier":"doc:\/\/MCAP\/documentation\/MCAP\/Timestamp","url":"\/documentation\/mcap\/timestamp"},"doc://MCAP/documentation/MCAP/Footer":{"title":"Footer","role":"symbol","navigatorTitle":[{"text":"Footer","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Footer","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/Footer","abstract":[],"url":"\/documentation\/mcap\/footer","kind":"symbol"},"doc://MCAP/documentation/MCAP/Channel":{"navigatorTitle":[{"kind":"identifier","text":"Channel"}],"title":"Channel","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Channel"}],"role":"symbol","type":"topic","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/Channel","kind":"symbol","abstract":[],"url":"\/documentation\/mcap\/channel"},"doc://MCAP/documentation/MCAP/DataEnd":{"title":"DataEnd","navigatorTitle":[{"kind":"identifier","text":"DataEnd"}],"identifier":"doc:\/\/MCAP\/documentation\/MCAP\/DataEnd","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DataEnd"}],"url":"\/documentation\/mcap\/dataend","abstract":[],"kind":"symbol"},"doc://MCAP/documentation/MCAP/MessageIndex":{"identifier":"doc:\/\/MCAP\/documentation\/MCAP\/MessageIndex","title":"MessageIndex","abstract":[],"type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"MessageIndex"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"MessageIndex"}],"url":"\/documentation\/mcap\/messageindex"},"doc://MCAP/documentation/MCAP/MCAPReadError":{"navigatorTitle":[{"text":"MCAPReadError","kind":"identifier"}],"type":"topic","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MCAPReadError","kind":"identifier"}],"url":"\/documentation\/mcap\/mcapreaderror","role":"symbol","kind":"symbol","abstract":[],"title":"MCAPReadError","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/MCAPReadError"},"doc://MCAP/documentation/MCAP/Opcode":{"identifier":"doc:\/\/MCAP\/documentation\/MCAP\/Opcode","title":"Opcode","abstract":[],"type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Opcode"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Opcode"}],"url":"\/documentation\/mcap\/opcode"},"doc://MCAP/documentation/MCAP/IWritable":{"title":"IWritable","abstract":[],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"IWritable"}],"kind":"symbol","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"IWritable"}],"url":"\/documentation\/mcap\/iwritable","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/IWritable"},"doc://MCAP/documentation/MCAP/Statistics":{"kind":"symbol","url":"\/documentation\/mcap\/statistics","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Statistics"}],"abstract":[],"identifier":"doc:\/\/MCAP\/documentation\/MCAP\/Statistics","navigatorTitle":[{"kind":"identifier","text":"Statistics"}],"title":"Statistics","role":"symbol","type":"topic"},"doc://MCAP/documentation/MCAP/MCAPStreamedReader":{"identifier":"doc:\/\/MCAP\/documentation\/MCAP\/MCAPStreamedReader","title":"MCAPStreamedReader","abstract":[{"type":"text","text":"A reader that parses MCAP data from a stream. Rather than expecting the entire MCAP file to be"},{"type":"text","text":" "},{"type":"text","text":"available up front, this reader emits records as they are encountered. This means it does not use"},{"type":"text","text":" "},{"type":"text","text":"the summary or index data to read the file, and can be used when only some of the data is available"},{"type":"text","text":" "},{"type":"text","text":"(such as when streaming over the network)."}],"type":"topic","kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MCAPStreamedReader","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"MCAPStreamedReader","kind":"identifier"}],"url":"\/documentation\/mcap\/mcapstreamedreader"},"doc://MCAP/documentation/MCAP/Metadata":{"identifier":"doc:\/\/MCAP\/documentation\/MCAP\/Metadata","url":"\/documentation\/mcap\/metadata","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Metadata"}],"abstract":[],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Metadata"}],"role":"symbol","kind":"symbol","title":"Metadata"},"doc://MCAP/documentation/MCAP/SummaryOffset":{"type":"topic","title":"SummaryOffset","url":"\/documentation\/mcap\/summaryoffset","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SummaryOffset","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/SummaryOffset","navigatorTitle":[{"text":"SummaryOffset","kind":"identifier"}],"kind":"symbol","abstract":[]},"doc://MCAP/documentation/MCAP/mcapMagic":{"type":"topic","abstract":[{"type":"text","text":"Magic bytes that appear at the beginning and end of every valid MCAP file: "},{"type":"codeVoice","code":"\"\\u{89}MCAP0\\r\\n\""},{"type":"text","text":"."}],"kind":"symbol","url":"\/documentation\/mcap\/mcapmagic","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/mcapMagic","role":"symbol","title":"mcapMagic","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"mcapMagic","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Data","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DataV"}]}}}