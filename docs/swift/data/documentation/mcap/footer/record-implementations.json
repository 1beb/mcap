{"hierarchy":{"paths":[["doc:\/\/MCAP\/documentation\/MCAP","doc:\/\/MCAP\/documentation\/MCAP\/Footer"]]},"variants":[{"paths":["\/documentation\/mcap\/footer\/record-implementations"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"text":"No overview available.","type":"text"}],"schemaVersion":{"major":0,"patch":0,"minor":2},"sections":[],"kind":"article","identifier":{"url":"doc:\/\/MCAP\/documentation\/MCAP\/Footer\/Record-Implementations","interfaceLanguage":"swift"},"metadata":{"role":"collectionGroup","title":"Record Implementations","modules":[{"name":"MCAP"}]},"topicSections":[{"identifiers":["doc:\/\/MCAP\/documentation\/MCAP\/Footer\/serialize(to:)"],"generated":true,"title":"Instance Methods"},{"identifiers":["doc:\/\/MCAP\/documentation\/MCAP\/Footer\/deserializing(from:at:)","doc:\/\/MCAP\/documentation\/MCAP\/Footer\/deserializingFields(from:)"],"generated":true,"title":"Type Methods"}],"references":{"doc://MCAP/documentation/MCAP/Footer/deserializing(from:at:)":{"type":"topic","kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"deserializing"},{"kind":"text","text":"("},{"kind":"externalParam","text":"from"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Data","preciseIdentifier":"s:10Foundation4DataV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"at"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"}],"identifier":"doc:\/\/MCAP\/documentation\/MCAP\/Footer\/deserializing(from:at:)","title":"deserializing(from:at:)","url":"\/documentation\/mcap\/footer\/deserializing(from:at:)","abstract":[],"role":"symbol"},"doc://MCAP/documentation/MCAP/Footer/serialize(to:)":{"role":"symbol","abstract":[],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"serialize","kind":"identifier"},{"text":"(","kind":"text"},{"text":"to","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Data","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DataV"},{"text":")","kind":"text"}],"kind":"symbol","url":"\/documentation\/mcap\/footer\/serialize(to:)","type":"topic","title":"serialize(to:)","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/Footer\/serialize(to:)"},"doc://MCAP/documentation/MCAP/Footer/deserializingFields(from:)":{"title":"deserializingFields(from:)","type":"topic","abstract":[],"url":"\/documentation\/mcap\/footer\/deserializingfields(from:)","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/Footer\/deserializingFields(from:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"deserializingFields","kind":"identifier"},{"text":"(","kind":"text"},{"text":"from","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10Foundation4DataV","text":"Data","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"kind":"symbol","role":"symbol"},"doc://MCAP/documentation/MCAP/Footer":{"navigatorTitle":[{"text":"Footer","kind":"identifier"}],"role":"symbol","title":"Footer","type":"topic","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/Footer","url":"\/documentation\/mcap\/footer","abstract":[],"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Footer"}]},"doc://MCAP/documentation/MCAP":{"url":"\/documentation\/mcap","title":"MCAP","type":"topic","identifier":"doc:\/\/MCAP\/documentation\/MCAP","abstract":[{"text":"Read and write log files containing heterogeneous timestamped data.","type":"text"}],"kind":"symbol","role":"collection"}}}