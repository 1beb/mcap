{"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"serialize"},{"kind":"text","text":"("},{"kind":"externalParam","text":"to"},{"kind":"text","text":" "},{"kind":"internalParam","text":"data"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DataV","text":"Data"},{"kind":"text","text":")"}],"languages":["swift"]}]}],"identifier":{"url":"doc:\/\/MCAP\/documentation\/MCAP\/Schema\/serialize(to:)","interfaceLanguage":"swift"},"kind":"symbol","variants":[{"paths":["\/documentation\/mcap\/schema\/serialize(to:)"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"patch":0,"minor":2},"sections":[],"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"Record.serialize(to:)"},{"type":"text","text":"."}],"metadata":{"title":"serialize(to:)","symbolKind":"method","roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"serialize","kind":"identifier"},{"text":"(","kind":"text"},{"text":"to","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"preciseIdentifier":"s:10Foundation4DataV","kind":"typeIdentifier","text":"Data"},{"kind":"text","text":")"}],"externalID":"s:4MCAP6RecordPAAE9serialize2toy10Foundation4DataVz_tF::SYNTHESIZED::s:4MCAP6SchemaV","role":"symbol","modules":[{"name":"MCAP"}],"extendedModule":"MCAP"},"hierarchy":{"paths":[["doc:\/\/MCAP\/documentation\/MCAP","doc:\/\/MCAP\/documentation\/MCAP\/Schema","doc:\/\/MCAP\/documentation\/MCAP\/Schema\/Record-Implementations"]]},"references":{"doc://MCAP/documentation/MCAP/Schema/serialize(to:)":{"identifier":"doc:\/\/MCAP\/documentation\/MCAP\/Schema\/serialize(to:)","abstract":[],"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"serialize","kind":"identifier"},{"text":"(","kind":"text"},{"text":"to","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:10Foundation4DataV","text":"Data","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/mcap\/schema\/serialize(to:)","title":"serialize(to:)","role":"symbol","kind":"symbol"},"doc://MCAP/documentation/MCAP/Schema":{"type":"topic","abstract":[],"kind":"symbol","navigatorTitle":[{"text":"Schema","kind":"identifier"}],"identifier":"doc:\/\/MCAP\/documentation\/MCAP\/Schema","url":"\/documentation\/mcap\/schema","title":"Schema","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Schema","kind":"identifier"}],"role":"symbol"},"doc://MCAP/documentation/MCAP":{"role":"collection","kind":"symbol","title":"MCAP","identifier":"doc:\/\/MCAP\/documentation\/MCAP","abstract":[{"text":"Read and write log files containing heterogeneous timestamped data.","type":"text"}],"type":"topic","url":"\/documentation\/mcap"},"doc://MCAP/documentation/MCAP/Schema/Record-Implementations":{"identifier":"doc:\/\/MCAP\/documentation\/MCAP\/Schema\/Record-Implementations","title":"Record Implementations","abstract":[],"url":"\/documentation\/mcap\/schema\/record-implementations","role":"collectionGroup","kind":"article","type":"topic"}}}