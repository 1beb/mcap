{"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/MCAP\/documentation\/MCAP\/Schema\/Record-Implementations"},"abstract":[{"text":"No overview available.","type":"text"}],"schemaVersion":{"minor":2,"major":0,"patch":0},"kind":"article","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/mcap\/schema\/record-implementations"]}],"metadata":{"role":"collectionGroup","modules":[{"name":"MCAP"}],"title":"Record Implementations"},"topicSections":[{"identifiers":["doc:\/\/MCAP\/documentation\/MCAP\/Schema\/serialize(to:)"],"generated":true,"title":"Instance Methods"},{"identifiers":["doc:\/\/MCAP\/documentation\/MCAP\/Schema\/deserializing(from:at:)","doc:\/\/MCAP\/documentation\/MCAP\/Schema\/deserializingFields(from:)"],"generated":true,"title":"Type Methods"}],"hierarchy":{"paths":[["doc:\/\/MCAP\/documentation\/MCAP","doc:\/\/MCAP\/documentation\/MCAP\/Schema"]]},"references":{"doc://MCAP/documentation/MCAP/Schema/deserializing(from:at:)":{"url":"\/documentation\/mcap\/schema\/deserializing(from:at:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"deserializing"},{"kind":"text","text":"("},{"kind":"externalParam","text":"from"},{"kind":"text","text":": "},{"preciseIdentifier":"s:10Foundation4DataV","kind":"typeIdentifier","text":"Data"},{"kind":"text","text":", "},{"kind":"externalParam","text":"at"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"}],"kind":"symbol","role":"symbol","type":"topic","title":"deserializing(from:at:)","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/Schema\/deserializing(from:at:)","abstract":[]},"doc://MCAP/documentation/MCAP/Schema/deserializingFields(from:)":{"type":"topic","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/Schema\/deserializingFields(from:)","title":"deserializingFields(from:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"deserializingFields"},{"kind":"text","text":"("},{"kind":"externalParam","text":"from"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DataV","text":"Data"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"}],"abstract":[],"kind":"symbol","role":"symbol","url":"\/documentation\/mcap\/schema\/deserializingfields(from:)"},"doc://MCAP/documentation/MCAP/Schema":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Schema","kind":"identifier"}],"type":"topic","role":"symbol","url":"\/documentation\/mcap\/schema","abstract":[],"kind":"symbol","title":"Schema","navigatorTitle":[{"text":"Schema","kind":"identifier"}],"identifier":"doc:\/\/MCAP\/documentation\/MCAP\/Schema"},"doc://MCAP/documentation/MCAP/Schema/serialize(to:)":{"url":"\/documentation\/mcap\/schema\/serialize(to:)","kind":"symbol","abstract":[],"title":"serialize(to:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"serialize"},{"kind":"text","text":"("},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DataV","text":"Data"},{"kind":"text","text":")"}],"identifier":"doc:\/\/MCAP\/documentation\/MCAP\/Schema\/serialize(to:)","type":"topic"},"doc://MCAP/documentation/MCAP":{"title":"MCAP","identifier":"doc:\/\/MCAP\/documentation\/MCAP","type":"topic","kind":"symbol","role":"collection","url":"\/documentation\/mcap","abstract":[{"text":"Read and write log files containing heterogeneous timestamped data.","type":"text"}]}}}