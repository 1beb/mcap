{"metadata":{"role":"symbol","extendedModule":"Swift","externalID":"s:SYsSHRzSH8RawValueSYRpzrlE04hashB0Sivp::SYNTHESIZED::s:4MCAP6OpcodeO","conformance":{"constraints":[{"type":"codeVoice","code":"Self"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":" and "},{"type":"codeVoice","code":"RawValue"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"roleHeading":"Instance Property","title":"hashValue","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hashValue","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"}],"modules":[{"name":"MCAP"}],"symbolKind":"property"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"hashValue","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":" { ","kind":"text"},{"text":"get","kind":"keyword"},{"text":" }","kind":"text"}]}]}],"schemaVersion":{"patch":0,"major":0,"minor":2},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/mcap\/opcode\/hashvalue"]}],"sections":[],"abstract":[{"text":"Inherited from ","type":"text"},{"code":"RawRepresentable.hashValue","type":"codeVoice"},{"text":".","type":"text"}],"hierarchy":{"paths":[["doc:\/\/MCAP\/documentation\/MCAP","doc:\/\/MCAP\/documentation\/MCAP\/Opcode","doc:\/\/MCAP\/documentation\/MCAP\/Opcode\/RawRepresentable-Implementations"]]},"kind":"symbol","identifier":{"url":"doc:\/\/MCAP\/documentation\/MCAP\/Opcode\/hashValue","interfaceLanguage":"swift"},"references":{"doc://MCAP/documentation/MCAP/Opcode/hashValue":{"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Self","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Hashable","type":"codeVoice"},{"type":"text","text":" and "},{"code":"RawValue","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"Hashable","type":"codeVoice"},{"type":"text","text":"."}]},"abstract":[],"url":"\/documentation\/mcap\/opcode\/hashvalue","type":"topic","role":"symbol","title":"hashValue","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"hashValue"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"}],"identifier":"doc:\/\/MCAP\/documentation\/MCAP\/Opcode\/hashValue"},"doc://MCAP/documentation/MCAP":{"identifier":"doc:\/\/MCAP\/documentation\/MCAP","title":"MCAP","role":"collection","abstract":[{"text":"Read and write log files containing heterogeneous timestamped data.","type":"text"}],"kind":"symbol","url":"\/documentation\/mcap","type":"topic"},"doc://MCAP/documentation/MCAP/Opcode":{"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Opcode"}],"url":"\/documentation\/mcap\/opcode","abstract":[],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"Opcode"}],"title":"Opcode","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/Opcode","role":"symbol","type":"topic"},"doc://MCAP/documentation/MCAP/Opcode/RawRepresentable-Implementations":{"abstract":[],"url":"\/documentation\/mcap\/opcode\/rawrepresentable-implementations","type":"topic","role":"collectionGroup","title":"RawRepresentable Implementations","kind":"article","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/Opcode\/RawRepresentable-Implementations"}}}