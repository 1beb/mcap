{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/MCAP\/documentation\/MCAP\/Opcode\/Equatable-Implementations"},"hierarchy":{"paths":[["doc:\/\/MCAP\/documentation\/MCAP","doc:\/\/MCAP\/documentation\/MCAP\/Opcode"]]},"abstract":[{"text":"No overview available.","type":"text"}],"metadata":{"role":"collectionGroup","title":"Equatable Implementations","modules":[{"name":"MCAP"}]},"kind":"article","schemaVersion":{"patch":0,"major":0,"minor":2},"topicSections":[{"identifiers":["doc:\/\/MCAP\/documentation\/MCAP\/Opcode\/!=(_:_:)"],"title":"Operators","generated":true}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/mcap\/opcode\/equatable-implementations"]}],"sections":[],"references":{"doc://MCAP/documentation/MCAP":{"abstract":[{"text":"Read and write log files containing heterogeneous timestamped data.","type":"text"}],"role":"collection","url":"\/documentation\/mcap","type":"topic","identifier":"doc:\/\/MCAP\/documentation\/MCAP","kind":"symbol","title":"MCAP"},"doc://MCAP/documentation/MCAP/Opcode":{"role":"symbol","url":"\/documentation\/mcap\/opcode","kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Opcode","kind":"identifier"}],"identifier":"doc:\/\/MCAP\/documentation\/MCAP\/Opcode","type":"topic","abstract":[],"navigatorTitle":[{"text":"Opcode","kind":"identifier"}],"title":"Opcode"},"doc://MCAP/documentation/MCAP/Opcode/!=(_:_:)":{"identifier":"doc:\/\/MCAP\/documentation\/MCAP\/Opcode\/!=(_:_:)","abstract":[],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"!=","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"type":"topic","kind":"symbol","title":"!=(_:_:)","url":"\/documentation\/mcap\/opcode\/!=(_:_:)","role":"symbol"}}}