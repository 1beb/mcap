{"hierarchy":{"paths":[["doc:\/\/MCAP\/documentation\/MCAP","doc:\/\/MCAP\/documentation\/MCAP\/Channel"]]},"schemaVersion":{"minor":2,"major":0,"patch":0},"sections":[],"kind":"article","variants":[{"paths":["\/documentation\/mcap\/channel\/record-implementations"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"No overview available."}],"topicSections":[{"generated":true,"identifiers":["doc:\/\/MCAP\/documentation\/MCAP\/Channel\/serialize(to:)"],"title":"Instance Methods"},{"generated":true,"identifiers":["doc:\/\/MCAP\/documentation\/MCAP\/Channel\/deserializing(from:at:)","doc:\/\/MCAP\/documentation\/MCAP\/Channel\/deserializingFields(from:)"],"title":"Type Methods"}],"metadata":{"modules":[{"name":"MCAP"}],"role":"collectionGroup","title":"Record Implementations"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/MCAP\/documentation\/MCAP\/Channel\/Record-Implementations"},"references":{"doc://MCAP/documentation/MCAP/Channel/deserializing(from:at:)":{"type":"topic","title":"deserializing(from:at:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"deserializing","kind":"identifier"},{"text":"(","kind":"text"},{"text":"from","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:10Foundation4DataV","text":"Data","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"at","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"kind":"symbol","abstract":[],"role":"symbol","url":"\/documentation\/mcap\/channel\/deserializing(from:at:)","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/Channel\/deserializing(from:at:)"},"doc://MCAP/documentation/MCAP/Channel/deserializingFields(from:)":{"type":"topic","url":"\/documentation\/mcap\/channel\/deserializingfields(from:)","role":"symbol","abstract":[],"title":"deserializingFields(from:)","kind":"symbol","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/Channel\/deserializingFields(from:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"deserializingFields","kind":"identifier"},{"text":"(","kind":"text"},{"text":"from","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Data","kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DataV"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"}]},"doc://MCAP/documentation/MCAP":{"title":"MCAP","type":"topic","role":"collection","url":"\/documentation\/mcap","kind":"symbol","identifier":"doc:\/\/MCAP\/documentation\/MCAP","abstract":[{"type":"text","text":"Read and write log files containing heterogeneous timestamped data."}]},"doc://MCAP/documentation/MCAP/Channel/serialize(to:)":{"identifier":"doc:\/\/MCAP\/documentation\/MCAP\/Channel\/serialize(to:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"serialize"},{"kind":"text","text":"("},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"preciseIdentifier":"s:10Foundation4DataV","kind":"typeIdentifier","text":"Data"},{"kind":"text","text":")"}],"role":"symbol","abstract":[],"title":"serialize(to:)","kind":"symbol","type":"topic","url":"\/documentation\/mcap\/channel\/serialize(to:)"},"doc://MCAP/documentation/MCAP/Channel":{"identifier":"doc:\/\/MCAP\/documentation\/MCAP\/Channel","url":"\/documentation\/mcap\/channel","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Channel"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Channel"}],"title":"Channel","abstract":[],"kind":"symbol","role":"symbol"}}}