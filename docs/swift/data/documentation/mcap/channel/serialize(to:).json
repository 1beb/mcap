{"sections":[],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"serialize"},{"kind":"text","text":"("},{"kind":"externalParam","text":"to"},{"kind":"text","text":" "},{"kind":"internalParam","text":"data"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Data","preciseIdentifier":"s:10Foundation4DataV"},{"kind":"text","text":")"}],"platforms":["Linux"]}],"kind":"declarations"}],"hierarchy":{"paths":[["doc:\/\/MCAP\/documentation\/MCAP","doc:\/\/MCAP\/documentation\/MCAP\/Channel","doc:\/\/MCAP\/documentation\/MCAP\/Channel\/Record-Implementations"]]},"variants":[{"paths":["\/documentation\/mcap\/channel\/serialize(to:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/MCAP\/documentation\/MCAP\/Channel\/serialize(to:)"},"metadata":{"symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"serialize"},{"text":"(","kind":"text"},{"text":"to","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Data","preciseIdentifier":"s:10Foundation4DataV","kind":"typeIdentifier"},{"text":")","kind":"text"}],"modules":[{"name":"MCAP"}],"extendedModule":"MCAP","roleHeading":"Instance Method","title":"serialize(to:)","role":"symbol","externalID":"s:4MCAP6RecordPAAE9serialize2toy10Foundation4DataVz_tF::SYNTHESIZED::s:4MCAP7ChannelV"},"schemaVersion":{"patch":0,"minor":2,"major":0},"abstract":[{"type":"text","text":"Inherited from "},{"type":"codeVoice","code":"Record.serialize(to:)"},{"type":"text","text":"."}],"kind":"symbol","references":{"doc://MCAP/documentation/MCAP/Channel/serialize(to:)":{"type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"serialize","kind":"identifier"},{"text":"(","kind":"text"},{"text":"to","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:10Foundation4DataV","text":"Data","kind":"typeIdentifier"},{"text":")","kind":"text"}],"kind":"symbol","title":"serialize(to:)","abstract":[],"identifier":"doc:\/\/MCAP\/documentation\/MCAP\/Channel\/serialize(to:)","url":"\/documentation\/mcap\/channel\/serialize(to:)"},"doc://MCAP/documentation/MCAP/Channel":{"title":"Channel","kind":"symbol","role":"symbol","url":"\/documentation\/mcap\/channel","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/Channel","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Channel"}],"navigatorTitle":[{"kind":"identifier","text":"Channel"}],"abstract":[],"type":"topic"},"doc://MCAP/documentation/MCAP":{"kind":"symbol","identifier":"doc:\/\/MCAP\/documentation\/MCAP","url":"\/documentation\/mcap","title":"MCAP","abstract":[{"text":"Read and write log files containing heterogeneous timestamped data.","type":"text"}],"role":"collection","type":"topic"},"doc://MCAP/documentation/MCAP/Channel/Record-Implementations":{"role":"collectionGroup","type":"topic","url":"\/documentation\/mcap\/channel\/record-implementations","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/Channel\/Record-Implementations","title":"Record Implementations","abstract":[],"kind":"article"}}}