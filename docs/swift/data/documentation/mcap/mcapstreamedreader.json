{"variants":[{"paths":["\/documentation\/mcap\/mcapstreamedreader"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"MCAPStreamedReader"}],"languages":["swift"]}]},{"kind":"content","content":[{"level":2,"type":"heading","anchor":"overview","text":"Overview"},{"type":"paragraph","inlineContent":[{"text":"Call ","type":"text"},{"identifier":"doc:\/\/MCAP\/documentation\/MCAP\/MCAPStreamedReader\/append(_:)","isActive":true,"type":"reference"},{"text":" when new data is available to add it to the reader’s internal buffer. Then,","type":"text"},{"text":" ","type":"text"},{"text":"call ","type":"text"},{"identifier":"doc:\/\/MCAP\/documentation\/MCAP\/MCAPStreamedReader\/nextRecord()","isActive":true,"type":"reference"},{"text":" repeatedly to consume records that are fully parseable.","type":"text"}]},{"syntax":"swift","type":"codeListing","code":["let reader = MCAPStreamedReader()","while let data = readSomeData() {","  reader.append(data)","  while let record = try reader.nextRecord() {","    \/\/ process a record...","  }","}"]}]}],"schemaVersion":{"patch":0,"major":0,"minor":2},"kind":"symbol","metadata":{"title":"MCAPStreamedReader","navigatorTitle":[{"text":"MCAPStreamedReader","kind":"identifier"}],"roleHeading":"Class","role":"symbol","externalID":"s:4MCAP18MCAPStreamedReaderC","modules":[{"name":"MCAP"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MCAPStreamedReader","kind":"identifier"}],"symbolKind":"class"},"hierarchy":{"paths":[["doc:\/\/MCAP\/documentation\/MCAP"]]},"sections":[],"abstract":[{"text":"A reader that parses MCAP data from a stream. Rather than expecting the entire MCAP file to be","type":"text"},{"text":" ","type":"text"},{"text":"available up front, this reader emits records as they are encountered. This means it does not use","type":"text"},{"text":" ","type":"text"},{"text":"the summary or index data to read the file, and can be used when only some of the data is available","type":"text"},{"text":" ","type":"text"},{"text":"(such as when streaming over the network).","type":"text"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/MCAP\/documentation\/MCAP\/MCAPStreamedReader"},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/MCAP\/documentation\/MCAP\/MCAPStreamedReader\/init(decompressHandlers:)"]},{"title":"Instance Methods","identifiers":["doc:\/\/MCAP\/documentation\/MCAP\/MCAPStreamedReader\/append(_:)","doc:\/\/MCAP\/documentation\/MCAP\/MCAPStreamedReader\/nextRecord()"]}],"references":{"doc://MCAP/documentation/MCAP/MCAPStreamedReader/init(decompressHandlers:)":{"role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"decompressHandlers"},{"kind":"text","text":": "},{"preciseIdentifier":"s:4MCAP18DecompressHandlersa","kind":"typeIdentifier","text":"DecompressHandlers"},{"kind":"text","text":")"}],"type":"topic","url":"\/documentation\/mcap\/mcapstreamedreader\/init(decompresshandlers:)","kind":"symbol","title":"init(decompressHandlers:)","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/MCAPStreamedReader\/init(decompressHandlers:)","abstract":[{"text":"Create a streamed reader.","type":"text"}]},"doc://MCAP/documentation/MCAP/MCAPStreamedReader":{"type":"topic","title":"MCAPStreamedReader","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/MCAPStreamedReader","url":"\/documentation\/mcap\/mcapstreamedreader","abstract":[{"text":"A reader that parses MCAP data from a stream. Rather than expecting the entire MCAP file to be","type":"text"},{"text":" ","type":"text"},{"text":"available up front, this reader emits records as they are encountered. This means it does not use","type":"text"},{"text":" ","type":"text"},{"text":"the summary or index data to read the file, and can be used when only some of the data is available","type":"text"},{"text":" ","type":"text"},{"text":"(such as when streaming over the network).","type":"text"}],"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"MCAPStreamedReader"}],"navigatorTitle":[{"kind":"identifier","text":"MCAPStreamedReader"}]},"doc://MCAP/documentation/MCAP/MCAPStreamedReader/append(_:)":{"type":"topic","title":"append(_:)","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/MCAPStreamedReader\/append(_:)","url":"\/documentation\/mcap\/mcapstreamedreader\/append(_:)","abstract":[{"text":"Add data to the reader’s internal buffer.","type":"text"}],"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"append"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Data","preciseIdentifier":"s:10Foundation4DataV"},{"kind":"text","text":")"}]},"doc://MCAP/documentation/MCAP":{"abstract":[{"text":"Read and write log files containing heterogeneous timestamped data.","type":"text"}],"url":"\/documentation\/mcap","kind":"symbol","role":"collection","type":"topic","identifier":"doc:\/\/MCAP\/documentation\/MCAP","title":"MCAP"},"doc://MCAP/documentation/MCAP/MCAPStreamedReader/nextRecord()":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"nextRecord"},{"kind":"text","text":"() "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:4MCAP6RecordP","kind":"typeIdentifier","text":"Record"},{"kind":"text","text":"?"}],"type":"topic","url":"\/documentation\/mcap\/mcapstreamedreader\/nextrecord()","kind":"symbol","title":"nextRecord()","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/MCAPStreamedReader\/nextRecord()","abstract":[{"text":"Retrieve the next record from the reader, if possible","type":"text"}]}}}