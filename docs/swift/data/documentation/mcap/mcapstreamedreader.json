{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/MCAP\/documentation\/MCAP\/MCAPStreamedReader"},"kind":"symbol","sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"MCAPStreamedReader"}],"platforms":["Linux"],"languages":["swift"]}]},{"kind":"content","content":[{"level":2,"type":"heading","anchor":"overview","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Call "},{"type":"reference","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/MCAPStreamedReader\/append(_:)","isActive":true},{"type":"text","text":" when new data is available to add it to the reader’s internal buffer. Then,"},{"type":"text","text":" "},{"type":"text","text":"call "},{"type":"reference","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/MCAPStreamedReader\/nextRecord()","isActive":true},{"type":"text","text":" repeatedly to consume records that are fully parseable."}]},{"type":"codeListing","code":["let reader = MCAPStreamedReader()","while let data = readSomeData() {","  reader.append(data)","  while let record = try reader.nextRecord() {","    \/\/ process a record...","  }","}"],"syntax":"swift"}]}],"schemaVersion":{"major":0,"patch":0,"minor":2},"hierarchy":{"paths":[["doc:\/\/MCAP\/documentation\/MCAP"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/MCAP\/documentation\/MCAP\/MCAPStreamedReader\/init(decompressHandlers:)"]},{"title":"Instance Methods","identifiers":["doc:\/\/MCAP\/documentation\/MCAP\/MCAPStreamedReader\/append(_:)","doc:\/\/MCAP\/documentation\/MCAP\/MCAPStreamedReader\/nextRecord()"]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/mcap\/mcapstreamedreader"]}],"abstract":[{"type":"text","text":"A reader that parses MCAP data from a stream. Rather than expecting the entire MCAP file to be"},{"type":"text","text":" "},{"type":"text","text":"available up front, this reader emits records as they are encountered. This means it does not use"},{"type":"text","text":" "},{"type":"text","text":"the summary or index data to read the file, and can be used when only some of the data is available"},{"type":"text","text":" "},{"type":"text","text":"(such as when streaming over the network)."}],"metadata":{"title":"MCAPStreamedReader","externalID":"s:4MCAP18MCAPStreamedReaderC","modules":[{"name":"MCAP"}],"navigatorTitle":[{"text":"MCAPStreamedReader","kind":"identifier"}],"symbolKind":"class","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MCAPStreamedReader","kind":"identifier"}],"role":"symbol","roleHeading":"Class"},"references":{"doc://MCAP/documentation/MCAP/MCAPStreamedReader/nextRecord()":{"type":"topic","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/MCAPStreamedReader\/nextRecord()","kind":"symbol","title":"nextRecord()","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"nextRecord"},{"kind":"text","text":"() "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:4MCAP6RecordP","kind":"typeIdentifier","text":"Record"},{"kind":"text","text":"?"}],"url":"\/documentation\/mcap\/mcapstreamedreader\/nextrecord()","abstract":[{"text":"Retrieve the next record from the reader, if possible","type":"text"}],"role":"symbol"},"doc://MCAP/documentation/MCAP/MCAPStreamedReader/init(decompressHandlers:)":{"type":"topic","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/MCAPStreamedReader\/init(decompressHandlers:)","kind":"symbol","title":"init(decompressHandlers:)","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"decompressHandlers"},{"kind":"text","text":": "},{"preciseIdentifier":"s:4MCAP18DecompressHandlersa","kind":"typeIdentifier","text":"DecompressHandlers"},{"kind":"text","text":")"}],"url":"\/documentation\/mcap\/mcapstreamedreader\/init(decompresshandlers:)","abstract":[{"text":"Create a streamed reader.","type":"text"}],"role":"symbol"},"doc://MCAP/documentation/MCAP/MCAPStreamedReader":{"identifier":"doc:\/\/MCAP\/documentation\/MCAP\/MCAPStreamedReader","kind":"symbol","role":"symbol","type":"topic","abstract":[{"type":"text","text":"A reader that parses MCAP data from a stream. Rather than expecting the entire MCAP file to be"},{"type":"text","text":" "},{"text":"available up front, this reader emits records as they are encountered. This means it does not use","type":"text"},{"text":" ","type":"text"},{"text":"the summary or index data to read the file, and can be used when only some of the data is available","type":"text"},{"text":" ","type":"text"},{"text":"(such as when streaming over the network).","type":"text"}],"url":"\/documentation\/mcap\/mcapstreamedreader","title":"MCAPStreamedReader","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"MCAPStreamedReader"}],"navigatorTitle":[{"kind":"identifier","text":"MCAPStreamedReader"}]},"doc://MCAP/documentation/MCAP":{"kind":"symbol","role":"collection","url":"\/documentation\/mcap","type":"topic","identifier":"doc:\/\/MCAP\/documentation\/MCAP","abstract":[{"text":"Read and write log files containing heterogeneous timestamped data.","type":"text"}],"title":"MCAP"},"doc://MCAP/documentation/MCAP/MCAPStreamedReader/append(_:)":{"identifier":"doc:\/\/MCAP\/documentation\/MCAP\/MCAPStreamedReader\/append(_:)","kind":"symbol","role":"symbol","type":"topic","abstract":[{"type":"text","text":"Add data to the reader’s internal buffer."}],"url":"\/documentation\/mcap\/mcapstreamedreader\/append(_:)","title":"append(_:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"append"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:10Foundation4DataV","text":"Data"},{"kind":"text","text":")"}]}}}