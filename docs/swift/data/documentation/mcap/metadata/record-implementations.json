{"abstract":[{"text":"No overview available.","type":"text"}],"topicSections":[{"identifiers":["doc:\/\/MCAP\/documentation\/MCAP\/Metadata\/serialize(to:)"],"title":"Instance Methods","generated":true},{"identifiers":["doc:\/\/MCAP\/documentation\/MCAP\/Metadata\/deserializing(from:at:)","doc:\/\/MCAP\/documentation\/MCAP\/Metadata\/deserializingFields(from:)"],"title":"Type Methods","generated":true}],"metadata":{"title":"Record Implementations","modules":[{"name":"MCAP"}],"role":"collectionGroup"},"sections":[],"hierarchy":{"paths":[["doc:\/\/MCAP\/documentation\/MCAP","doc:\/\/MCAP\/documentation\/MCAP\/Metadata"]]},"kind":"article","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/MCAP\/documentation\/MCAP\/Metadata\/Record-Implementations"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/mcap\/metadata\/record-implementations"]}],"schemaVersion":{"patch":0,"major":0,"minor":2},"references":{"doc://MCAP/documentation/MCAP/Metadata/deserializing(from:at:)":{"url":"\/documentation\/mcap\/metadata\/deserializing(from:at:)","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/Metadata\/deserializing(from:at:)","kind":"symbol","title":"deserializing(from:at:)","type":"topic","abstract":[],"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"deserializing","kind":"identifier"},{"text":"(","kind":"text"},{"text":"from","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Data","preciseIdentifier":"s:10Foundation4DataV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"at","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"role":"symbol"},"doc://MCAP/documentation/MCAP/Metadata/deserializingFields(from:)":{"identifier":"doc:\/\/MCAP\/documentation\/MCAP\/Metadata\/deserializingFields(from:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"deserializingFields","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"from"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Data","preciseIdentifier":"s:10Foundation4DataV"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"}],"abstract":[],"title":"deserializingFields(from:)","kind":"symbol","type":"topic","url":"\/documentation\/mcap\/metadata\/deserializingfields(from:)","role":"symbol"},"doc://MCAP/documentation/MCAP/Metadata":{"navigatorTitle":[{"kind":"identifier","text":"Metadata"}],"type":"topic","role":"symbol","title":"Metadata","kind":"symbol","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/Metadata","abstract":[],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Metadata"}],"url":"\/documentation\/mcap\/metadata"},"doc://MCAP/documentation/MCAP/Metadata/serialize(to:)":{"abstract":[],"type":"topic","url":"\/documentation\/mcap\/metadata\/serialize(to:)","role":"symbol","title":"serialize(to:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"serialize","kind":"identifier"},{"text":"(","kind":"text"},{"text":"to","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:10Foundation4DataV","text":"Data","kind":"typeIdentifier"},{"text":")","kind":"text"}],"identifier":"doc:\/\/MCAP\/documentation\/MCAP\/Metadata\/serialize(to:)"},"doc://MCAP/documentation/MCAP":{"kind":"symbol","title":"MCAP","role":"collection","type":"topic","url":"\/documentation\/mcap","identifier":"doc:\/\/MCAP\/documentation\/MCAP","abstract":[{"text":"Read and write log files containing heterogeneous timestamped data.","type":"text"}]}}}