{"metadata":{"title":"nextRecord()","role":"symbol","externalID":"s:4MCAP18MCAPStreamedReaderC10nextRecordAA0E0_pSgyKF","roleHeading":"Instance Method","symbolKind":"method","modules":[{"name":"MCAP"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"nextRecord","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Record","kind":"typeIdentifier","preciseIdentifier":"s:4MCAP6RecordP"},{"text":"?","kind":"text"}]},"hierarchy":{"paths":[["doc:\/\/MCAP\/documentation\/MCAP","doc:\/\/MCAP\/documentation\/MCAP\/MCAPStreamedReader"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/mcap\/mcapstreamedreader\/nextrecord()"]}],"kind":"symbol","schemaVersion":{"patch":0,"major":0,"minor":2},"identifier":{"url":"doc:\/\/MCAP\/documentation\/MCAP\/MCAPStreamedReader\/nextRecord()","interfaceLanguage":"swift"},"abstract":[{"text":"Retrieve the next record from the reader, if possible","type":"text"}],"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"nextRecord"},{"kind":"text","text":"() "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"identifier":"doc:\/\/MCAP\/documentation\/MCAP\/Record","kind":"typeIdentifier","preciseIdentifier":"s:4MCAP6RecordP","text":"Record"},{"kind":"text","text":"?"}]}],"kind":"declarations"},{"content":[{"text":"Return Value","anchor":"return-value","level":2,"type":"heading"},{"inlineContent":[{"text":"The next record, or ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":" if not enough data was available to parse a record.","type":"text"}],"type":"paragraph"}],"kind":"content"},{"content":[{"anchor":"discussion","text":"Discussion","type":"heading","level":2},{"content":[{"inlineContent":[{"text":"Any error encountered during reading, decompression, or parsing.","type":"text"}],"type":"paragraph"}],"type":"aside","style":"note","name":"Throws"}],"kind":"content"}],"sections":[],"references":{"doc://MCAP/documentation/MCAP":{"kind":"symbol","role":"collection","identifier":"doc:\/\/MCAP\/documentation\/MCAP","title":"MCAP","type":"topic","abstract":[{"text":"Read and write log files containing heterogeneous timestamped data.","type":"text"}],"url":"\/documentation\/mcap"},"doc://MCAP/documentation/MCAP/Record":{"title":"Record","type":"topic","abstract":[],"url":"\/documentation\/mcap\/record","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"Record"}],"kind":"symbol","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/Record","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Record"}]},"doc://MCAP/documentation/MCAP/MCAPStreamedReader/nextRecord()":{"abstract":[{"type":"text","text":"Retrieve the next record from the reader, if possible"}],"type":"topic","identifier":"doc:\/\/MCAP\/documentation\/MCAP\/MCAPStreamedReader\/nextRecord()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"nextRecord","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Record","kind":"typeIdentifier","preciseIdentifier":"s:4MCAP6RecordP"},{"text":"?","kind":"text"}],"role":"symbol","url":"\/documentation\/mcap\/mcapstreamedreader\/nextrecord()","title":"nextRecord()","kind":"symbol"},"doc://MCAP/documentation/MCAP/MCAPStreamedReader":{"identifier":"doc:\/\/MCAP\/documentation\/MCAP\/MCAPStreamedReader","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"MCAPStreamedReader","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"MCAPStreamedReader","kind":"identifier"}],"url":"\/documentation\/mcap\/mcapstreamedreader","title":"MCAPStreamedReader","abstract":[{"type":"text","text":"A reader that parses MCAP data from a stream. Rather than expecting the entire MCAP file to be"},{"type":"text","text":" "},{"type":"text","text":"available up front, this reader emits records as they are encountered. This means it does not use"},{"type":"text","text":" "},{"type":"text","text":"the summary or index data to read the file, and can be used when only some of the data is available"},{"type":"text","text":" "},{"type":"text","text":"(such as when streaming over the network)."}]}}}